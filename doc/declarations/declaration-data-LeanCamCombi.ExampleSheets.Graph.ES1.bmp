{"name":"LeanCamCombi.ExampleSheets.Graph.ES1","instances":[],"imports":["Init","Mathlib.Combinatorics.Hall.Basic","Mathlib.Combinatorics.SimpleGraph.Acyclic","Mathlib.Combinatorics.SimpleGraph.Clique","Mathlib.Data.Real.Sqrt","Mathlib.SetTheory.Cardinal.Basic"],"declarations":[{"info":{"sourceLink":"https://github.com/YaelDillies/LeanCamCombi/blob/41ed909d6e8b5e6b618db6412ed63ba09eba61c3//LeanCamCombi/ExampleSheets/Graph/ES1.lean#L254-L257","name":"GraphTheory.ES1.q15_part2","line":254,"kind":"theorem","docLink":"./LeanCamCombi/ExampleSheets/Graph/ES1.html#GraphTheory.ES1.q15_part2","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./LeanCamCombi/ExampleSheets/Graph/ES1.html#GraphTheory.ES1.q15_part2\"><span class=\"name\">GraphTheory</span>.<span class=\"name\">ES1</span>.<span class=\"name\">q15_part2</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∃ <span class=\"fn\">ε</span>,\n  <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt</a> <span class=\"fn\">ε</span></span> <a href=\"./Init/Prelude.html#And\">∧</a>     <span class=\"fn\">∀ (<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_5) [<span class=\"fn\">inst</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Fintype/Basic.html#Fintype\">Fintype</a> <span class=\"fn\">α</span></span>], <span class=\"fn\">∃ <span class=\"fn\">x</span>, <span class=\"fn\">∀ (<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">α</span> → <span class=\"fn\"><a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a> <a href=\"./Init/Prelude.html#Prod\">×</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a></span></span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">ε</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">↑(<span class=\"fn\"><a href=\"./Mathlib/Data/Fintype/Card.html#Fintype.card\">Fintype.card</a> <span class=\"fn\">α</span></span>)</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><a href=\"./LeanCamCombi/ExampleSheets/Graph/ES1.html#GraphTheory.ES1.distortion\">GraphTheory.ES1.distortion</a> <span class=\"fn\">f</span></span></span></span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/YaelDillies/LeanCamCombi/blob/41ed909d6e8b5e6b618db6412ed63ba09eba61c3//LeanCamCombi/ExampleSheets/Graph/ES1.lean#L249-L252","name":"GraphTheory.ES1.q15_part1","line":249,"kind":"theorem","docLink":"./LeanCamCombi/ExampleSheets/Graph/ES1.html#GraphTheory.ES1.q15_part1","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./LeanCamCombi/ExampleSheets/Graph/ES1.html#GraphTheory.ES1.q15_part1\"><span class=\"name\">GraphTheory</span>.<span class=\"name\">ES1</span>.<span class=\"name\">q15_part1</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∃ <span class=\"fn\">ε</span>,\n  <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt</a> <span class=\"fn\">ε</span></span> <a href=\"./Init/Prelude.html#And\">∧</a>     <span class=\"fn\">∀ (<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_5) [<span class=\"fn\">inst</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Fintype/Basic.html#Fintype\">Fintype</a> <span class=\"fn\">α</span></span>],\n      <span class=\"fn\">∃ <span class=\"fn\">x</span>, <span class=\"fn\">∀ (<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">α</span> → <span class=\"fn\"><a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a> <a href=\"./Init/Prelude.html#Prod\">×</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a></span></span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">ε</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><a href=\"./Mathlib/Data/Real/Sqrt.html#Real.sqrt\">Real.sqrt</a> <span class=\"fn\">↑(<span class=\"fn\"><a href=\"./Mathlib/Data/Fintype/Card.html#Fintype.card\">Fintype.card</a> <span class=\"fn\">α</span></span>)</span></span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><a href=\"./LeanCamCombi/ExampleSheets/Graph/ES1.html#GraphTheory.ES1.distortion\">GraphTheory.ES1.distortion</a> <span class=\"fn\">f</span></span></span></span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/YaelDillies/LeanCamCombi/blob/41ed909d6e8b5e6b618db6412ed63ba09eba61c3//LeanCamCombi/ExampleSheets/Graph/ES1.lean#L246-L247","name":"GraphTheory.ES1.distortion","line":246,"kind":"def","docLink":"./LeanCamCombi/ExampleSheets/Graph/ES1.html#GraphTheory.ES1.distortion","doc":"The distortion of a function `f` between metric spaces is the ratio between the maximum and\nminimum of `dist (f a) (f b) / dist a b`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./LeanCamCombi/ExampleSheets/Graph/ES1.html#GraphTheory.ES1.distortion\"><span class=\"name\">GraphTheory</span>.<span class=\"name\">ES1</span>.<span class=\"name\">distortion</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{β : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/MetricSpace/Basic.html#PseudoMetricSpace\">PseudoMetricSpace</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/MetricSpace/Basic.html#PseudoMetricSpace\">PseudoMetricSpace</a> <span class=\"fn\">β</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">α</span> → <span class=\"fn\">β</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a></div></div>"},{"info":{"sourceLink":"https://github.com/YaelDillies/LeanCamCombi/blob/41ed909d6e8b5e6b618db6412ed63ba09eba61c3//LeanCamCombi/ExampleSheets/Graph/ES1.lean#L226-L229","name":"GraphTheory.ES1.q14_part3","line":226,"kind":"theorem","docLink":"./LeanCamCombi/ExampleSheets/Graph/ES1.html#GraphTheory.ES1.q14_part3","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./LeanCamCombi/ExampleSheets/Graph/ES1.html#GraphTheory.ES1.q14_part3\"><span class=\"name\">GraphTheory</span>.<span class=\"name\">ES1</span>.<span class=\"name\">q14_part3</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{β : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <span class=\"fn\">β</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(r : <span class=\"fn\"><span class=\"fn\">α</span> → <span class=\"fn\"><span class=\"fn\">β</span> → <a href=\"./foundational_types.html\">Prop</a></span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">(<span class=\"fn\">a</span> : <span class=\"fn\">α</span>) → <span class=\"fn\"><a href=\"./Mathlib/Data/Fintype/Basic.html#Fintype\">Fintype</a> <span class=\"fn\">↑(<span class=\"fn\"><a href=\"./Mathlib/Data/Rel.html#Rel.image\">Rel.image</a> <span class=\"fn\">r</span> <span class=\"fn\">{<span class=\"fn\">a</span>}</span></span>)</span></span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hr : <span class=\"fn\">∀ (<span class=\"fn\">A</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Finset/Basic.html#Finset\">Finset</a> <span class=\"fn\">α</span></span>), <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Data/Finset/Card.html#Finset.card\">Finset.card</a> <span class=\"fn\">A</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><a href=\"./Mathlib/Data/Fintype/Card.html#Fintype.card\">Fintype.card</a> <span class=\"fn\">↑(<span class=\"fn\"><a href=\"./Mathlib/Data/Rel.html#Rel.image\">Rel.image</a> <span class=\"fn\">r</span> <span class=\"fn\">↑<span class=\"fn\">A</span></span></span>)</span></span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∃ <span class=\"fn\">f</span>, <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Init/Function.html#Function.Injective\">Function.Injective</a> <span class=\"fn\">f</span></span> <a href=\"./Init/Prelude.html#And\">∧</a> (<span class=\"fn\">(<span class=\"fn\">a</span> : <span class=\"fn\">α</span>) → <span class=\"fn\"><span class=\"fn\">r</span> <span class=\"fn\">a</span> (<span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">a</span></span>)</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/YaelDillies/LeanCamCombi/blob/41ed909d6e8b5e6b618db6412ed63ba09eba61c3//LeanCamCombi/ExampleSheets/Graph/ES1.lean#L221-L224","name":"GraphTheory.ES1.q14_part2","line":221,"kind":"theorem","docLink":"./LeanCamCombi/ExampleSheets/Graph/ES1.html#GraphTheory.ES1.q14_part2","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./LeanCamCombi/ExampleSheets/Graph/ES1.html#GraphTheory.ES1.q14_part2\"><span class=\"name\">GraphTheory</span>.<span class=\"name\">ES1</span>.<span class=\"name\">q14_part2</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{β : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <span class=\"fn\">β</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/Countable/Defs.html#Countable\">Countable</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/Countable/Defs.html#Countable\">Countable</a> <span class=\"fn\">β</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(r : <span class=\"fn\"><span class=\"fn\">α</span> → <span class=\"fn\"><span class=\"fn\">β</span> → <a href=\"./foundational_types.html\">Prop</a></span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">(<span class=\"fn\">a</span> : <span class=\"fn\">α</span>) → <span class=\"fn\"><a href=\"./Mathlib/Data/Fintype/Basic.html#Fintype\">Fintype</a> <span class=\"fn\">↑(<span class=\"fn\"><a href=\"./Mathlib/Data/Rel.html#Rel.image\">Rel.image</a> <span class=\"fn\">r</span> <span class=\"fn\">{<span class=\"fn\">a</span>}</span></span>)</span></span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hr : <span class=\"fn\">∀ (<span class=\"fn\">A</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Finset/Basic.html#Finset\">Finset</a> <span class=\"fn\">α</span></span>), <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Data/Finset/Card.html#Finset.card\">Finset.card</a> <span class=\"fn\">A</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><a href=\"./Mathlib/Data/Fintype/Card.html#Fintype.card\">Fintype.card</a> <span class=\"fn\">↑(<span class=\"fn\"><a href=\"./Mathlib/Data/Rel.html#Rel.image\">Rel.image</a> <span class=\"fn\">r</span> <span class=\"fn\">↑<span class=\"fn\">A</span></span></span>)</span></span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∃ <span class=\"fn\">f</span>, <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Init/Function.html#Function.Injective\">Function.Injective</a> <span class=\"fn\">f</span></span> <a href=\"./Init/Prelude.html#And\">∧</a> (<span class=\"fn\">(<span class=\"fn\">a</span> : <span class=\"fn\">α</span>) → <span class=\"fn\"><span class=\"fn\">r</span> <span class=\"fn\">a</span> (<span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">a</span></span>)</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/YaelDillies/LeanCamCombi/blob/41ed909d6e8b5e6b618db6412ed63ba09eba61c3//LeanCamCombi/ExampleSheets/Graph/ES1.lean#L215-L219","name":"GraphTheory.ES1.q14_part1","line":215,"kind":"theorem","docLink":"./LeanCamCombi/ExampleSheets/Graph/ES1.html#GraphTheory.ES1.q14_part1","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./LeanCamCombi/ExampleSheets/Graph/ES1.html#GraphTheory.ES1.q14_part1\"><span class=\"name\">GraphTheory</span>.<span class=\"name\">ES1</span>.<span class=\"name\">q14_part1</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∃ <span class=\"fn\">r</span>,\n  <span class=\"fn\">(<span class=\"fn\">∀ (<span class=\"fn\">A</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Finset/Basic.html#Finset\">Finset</a> <a href=\"./Init/Prelude.html#Nat\">ℕ</a></span>), <span class=\"fn\"><span class=\"fn\">↑(<span class=\"fn\"><a href=\"./Mathlib/Data/Finset/Card.html#Finset.card\">Finset.card</a> <span class=\"fn\">A</span></span>)</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Cardinal/Basic.html#Cardinal.mk\">Cardinal.mk</a> <span class=\"fn\">↑(<span class=\"fn\"><a href=\"./Mathlib/Data/Rel.html#Rel.image\">Rel.image</a> <span class=\"fn\">r</span> <span class=\"fn\">↑<span class=\"fn\">A</span></span></span>)</span></span></span></span>) <a href=\"./Init/Prelude.html#And\">∧</a>     <span class=\"fn\">∀ (<span class=\"fn\">f</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Nat\">ℕ</a> → <a href=\"./Init/Prelude.html#Nat\">ℕ</a></span>), <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Init/Function.html#Function.Injective\">Function.Injective</a> <span class=\"fn\">f</span></span> → <span class=\"fn\">∃ <span class=\"fn\">n</span>, <span class=\"fn\"><a href=\"./Init/Prelude.html#Not\">¬</a><span class=\"fn\"><span class=\"fn\">r</span> <span class=\"fn\">n</span> (<span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">n</span></span>)</span></span></span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/YaelDillies/LeanCamCombi/blob/41ed909d6e8b5e6b618db6412ed63ba09eba61c3//LeanCamCombi/ExampleSheets/Graph/ES1.lean#L200-L202","name":"GraphTheory.ES1.q13","line":200,"kind":"theorem","docLink":"./LeanCamCombi/ExampleSheets/Graph/ES1.html#GraphTheory.ES1.q13","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./LeanCamCombi/ExampleSheets/Graph/ES1.html#GraphTheory.ES1.q13\"><span class=\"name\">GraphTheory</span>.<span class=\"name\">ES1</span>.<span class=\"name\">q13</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{β : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/Finite/Defs.html#Finite\">Finite</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(g : <span class=\"fn\"><span class=\"fn\">β</span> <a href=\"./Mathlib/Logic/Embedding/Basic.html#Function.Embedding\">↪</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">β</span> → <span class=\"fn\"><span class=\"fn\">α</span> → <span class=\"fn\">α</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hf : <span class=\"fn\"><a href=\"./LeanCamCombi/ExampleSheets/Graph/ES1.html#GraphTheory.ES1.IsLatin\">GraphTheory.ES1.IsLatin</a> <span class=\"fn\">f</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∃ <span class=\"fn\">f'</span>, <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">f'</span> <a href=\"./Init/Prelude.html#Function.comp\">∘</a> <span class=\"fn\">↑<span class=\"fn\">g</span></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">f</span></span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\"><a href=\"./LeanCamCombi/ExampleSheets/Graph/ES1.html#GraphTheory.ES1.IsLatin\">GraphTheory.ES1.IsLatin</a> <span class=\"fn\">f</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/YaelDillies/LeanCamCombi/blob/41ed909d6e8b5e6b618db6412ed63ba09eba61c3//LeanCamCombi/ExampleSheets/Graph/ES1.lean#L197-L198","name":"GraphTheory.ES1.IsLatin","line":197,"kind":"def","docLink":"./LeanCamCombi/ExampleSheets/Graph/ES1.html#GraphTheory.ES1.IsLatin","doc":"A Latin rectangle is a binary function whose transversals are all injective. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./LeanCamCombi/ExampleSheets/Graph/ES1.html#GraphTheory.ES1.IsLatin\"><span class=\"name\">GraphTheory</span>.<span class=\"name\">ES1</span>.<span class=\"name\">IsLatin</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{β : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{γ : <a href=\"./foundational_types.html\">Type</a> u_4}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">α</span> → <span class=\"fn\"><span class=\"fn\">β</span> → <span class=\"fn\">γ</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Prop</a></div></div>"},{"info":{"sourceLink":"https://github.com/YaelDillies/LeanCamCombi/blob/41ed909d6e8b5e6b618db6412ed63ba09eba61c3//LeanCamCombi/ExampleSheets/Graph/ES1.lean#L181-L186","name":"GraphTheory.ES1.q12","line":181,"kind":"theorem","docLink":"./LeanCamCombi/ExampleSheets/Graph/ES1.html#GraphTheory.ES1.q12","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./LeanCamCombi/ExampleSheets/Graph/ES1.html#GraphTheory.ES1.q12\"><span class=\"name\">GraphTheory</span>.<span class=\"name\">ES1</span>.<span class=\"name\">q12</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(G : <span class=\"fn\"><a href=\"./Mathlib/Combinatorics/SimpleGraph/Basic.html#SimpleGraph\">SimpleGraph</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableRel\">DecidableRel</a> <span class=\"fn\"><span class=\"fn\">G</span>.Adj</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(s : <span class=\"fn\"><a href=\"./Mathlib/Data/Finset/Basic.html#Finset\">Finset</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∃ <span class=\"fn\">u</span> <span class=\"fn\">v</span>,\n  <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Order/Disjoint.html#Disjoint\">Disjoint</a> <span class=\"fn\">u</span> <span class=\"fn\">v</span></span> <a href=\"./Init/Prelude.html#And\">∧</a>     <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">u</span> <a href=\"./Std/Classes/SetNotation.html#Union.union\">∪</a> <span class=\"fn\">v</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">s</span></span> <a href=\"./Init/Prelude.html#And\">∧</a>       <span class=\"fn\">(<span class=\"fn\">∀ (<span class=\"fn\">a</span> : <span class=\"fn\">α</span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">u</span></span> → <span class=\"fn\"><a href=\"./Mathlib/Algebra/Parity.html#Even\">Even</a> (<span class=\"fn\"><a href=\"./Mathlib/Data/Finset/Card.html#Finset.card\">Finset.card</a> (<span class=\"fn\"><a href=\"./Mathlib/Data/Finset/Basic.html#Finset.filter\">Finset.filter</a> (<span class=\"fn\"><a href=\"./Mathlib/Combinatorics/SimpleGraph/Basic.html#SimpleGraph.Adj\">SimpleGraph.Adj</a> <span class=\"fn\">G</span> <span class=\"fn\">a</span></span>) <span class=\"fn\">u</span></span>)</span>)</span></span></span>) <a href=\"./Init/Prelude.html#And\">∧</a>         <span class=\"fn\">∀ (<span class=\"fn\">a</span> : <span class=\"fn\">α</span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">v</span></span> → <span class=\"fn\"><a href=\"./Mathlib/Algebra/Parity.html#Even\">Even</a> (<span class=\"fn\"><a href=\"./Mathlib/Data/Finset/Card.html#Finset.card\">Finset.card</a> (<span class=\"fn\"><a href=\"./Mathlib/Data/Finset/Basic.html#Finset.filter\">Finset.filter</a> (<span class=\"fn\"><a href=\"./Mathlib/Combinatorics/SimpleGraph/Basic.html#SimpleGraph.Adj\">SimpleGraph.Adj</a> <span class=\"fn\">G</span> <span class=\"fn\">a</span></span>) <span class=\"fn\">v</span></span>)</span>)</span></span></span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/YaelDillies/LeanCamCombi/blob/41ed909d6e8b5e6b618db6412ed63ba09eba61c3//LeanCamCombi/ExampleSheets/Graph/ES1.lean#L160-L164","name":"GraphTheory.ES1.q10","line":160,"kind":"theorem","docLink":"./LeanCamCombi/ExampleSheets/Graph/ES1.html#GraphTheory.ES1.q10","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./LeanCamCombi/ExampleSheets/Graph/ES1.html#GraphTheory.ES1.q10\"><span class=\"name\">GraphTheory</span>.<span class=\"name\">ES1</span>.<span class=\"name\">q10</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/Fintype/Basic.html#Fintype\">Fintype</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">(<span class=\"fn\">∃ <span class=\"fn\">G</span> <span class=\"fn\">x</span> <span class=\"fn\">k</span>, <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Combinatorics/SimpleGraph/Basic.html#SimpleGraph.IsRegularOfDegree\">SimpleGraph.IsRegularOfDegree</a> <span class=\"fn\">G</span> <span class=\"fn\">k</span></span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\"><span class=\"fn\"><a href=\"./LeanCamCombi/ExampleSheets/Graph/ES1.html#GraphTheory.ES1.cliqueNumber\">GraphTheory.ES1.cliqueNumber</a> <span class=\"fn\">G</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">n</span></span></span></span>) <a href=\"./Init/Core.html#Iff\">↔</a>   <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Data/Fintype/Card.html#Fintype.card\">Fintype.card</a> <span class=\"fn\">α</span></span> <a href=\"./Init/Prelude.html#HDiv.hDiv\">/</a> <span class=\"fn\">2</span></span></span> <a href=\"./Init/Prelude.html#Or\">∨</a> <span class=\"fn\"><span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Data/Fintype/Card.html#Fintype.card\">Fintype.card</a> <span class=\"fn\">α</span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/YaelDillies/LeanCamCombi/blob/41ed909d6e8b5e6b618db6412ed63ba09eba61c3//LeanCamCombi/ExampleSheets/Graph/ES1.lean#L157-L158","name":"GraphTheory.ES1.cliqueNumber","line":157,"kind":"def","docLink":"./LeanCamCombi/ExampleSheets/Graph/ES1.html#GraphTheory.ES1.cliqueNumber","doc":"The clique number of a graph is the size of its largest clique. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./LeanCamCombi/ExampleSheets/Graph/ES1.html#GraphTheory.ES1.cliqueNumber\"><span class=\"name\">GraphTheory</span>.<span class=\"name\">ES1</span>.<span class=\"name\">cliqueNumber</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/Fintype/Basic.html#Fintype\">Fintype</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(G : <span class=\"fn\"><a href=\"./Mathlib/Combinatorics/SimpleGraph/Basic.html#SimpleGraph\">SimpleGraph</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableRel\">DecidableRel</a> <span class=\"fn\"><span class=\"fn\">G</span>.Adj</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Nat\">ℕ</a></div></div>"},{"info":{"sourceLink":"https://github.com/YaelDillies/LeanCamCombi/blob/41ed909d6e8b5e6b618db6412ed63ba09eba61c3//LeanCamCombi/ExampleSheets/Graph/ES1.lean#L139-L145","name":"GraphTheory.ES1.q9","line":139,"kind":"theorem","docLink":"./LeanCamCombi/ExampleSheets/Graph/ES1.html#GraphTheory.ES1.q9","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./LeanCamCombi/ExampleSheets/Graph/ES1.html#GraphTheory.ES1.q9\"><span class=\"name\">GraphTheory</span>.<span class=\"name\">ES1</span>.<span class=\"name\">q9</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/Fintype/Basic.html#Fintype\">Fintype</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(G : <span class=\"fn\"><a href=\"./Mathlib/Combinatorics/SimpleGraph/Basic.html#SimpleGraph\">SimpleGraph</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableRel\">DecidableRel</a> <span class=\"fn\"><span class=\"fn\">G</span>.Adj</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">(<span class=\"fn\">∃ <span class=\"fn\">𝒜</span>,\n    <span class=\"fn\">(<span class=\"fn\">∀ (<span class=\"fn\">p </span>q : <span class=\"fn\">(a : <span class=\"fn\">α</span>) × <span class=\"fn\"><a href=\"./Mathlib/Combinatorics/SimpleGraph/Connectivity.html#SimpleGraph.Path\">SimpleGraph.Path</a> <span class=\"fn\">G</span> <span class=\"fn\">a</span> <span class=\"fn\">a</span></span></span>),\n        <span class=\"fn\"><a href=\"./Std/Data/List/Basic.html#List.Disjoint\">List.Disjoint</a> (<span class=\"fn\"><a href=\"./Mathlib/Combinatorics/SimpleGraph/Connectivity.html#SimpleGraph.Walk.edges\">SimpleGraph.Walk.edges</a> <span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\">p</span>.snd</span></span></span>) (<span class=\"fn\"><a href=\"./Mathlib/Combinatorics/SimpleGraph/Connectivity.html#SimpleGraph.Walk.edges\">SimpleGraph.Walk.edges</a> <span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\">q</span>.snd</span></span></span>)</span></span>) <a href=\"./Init/Prelude.html#And\">∧</a>       <span class=\"fn\">∀ (<span class=\"fn\">e</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Sym/Sym2.html#Sym2\">Sym2</a> <span class=\"fn\">α</span></span>), <span class=\"fn\">∃ <span class=\"fn\">p</span>, <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">p</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">𝒜</span></span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\"><span class=\"fn\">e</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/Combinatorics/SimpleGraph/Connectivity.html#SimpleGraph.Walk.edges\">SimpleGraph.Walk.edges</a> <span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\">p</span>.snd</span></span></span></span></span></span></span></span></span>) <a href=\"./Init/Core.html#Iff\">↔</a>   <span class=\"fn\">∀ (<span class=\"fn\">a</span> : <span class=\"fn\">α</span>), <span class=\"fn\"><a href=\"./Mathlib/Algebra/Parity.html#Even\">Even</a> (<span class=\"fn\"><a href=\"./Mathlib/Combinatorics/SimpleGraph/Basic.html#SimpleGraph.degree\">SimpleGraph.degree</a> <span class=\"fn\">G</span> <span class=\"fn\">a</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/YaelDillies/LeanCamCombi/blob/41ed909d6e8b5e6b618db6412ed63ba09eba61c3//LeanCamCombi/ExampleSheets/Graph/ES1.lean#L126-L128","name":"GraphTheory.ES1.q8","line":126,"kind":"theorem","docLink":"./LeanCamCombi/ExampleSheets/Graph/ES1.html#GraphTheory.ES1.q8","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./LeanCamCombi/ExampleSheets/Graph/ES1.html#GraphTheory.ES1.q8\"><span class=\"name\">GraphTheory</span>.<span class=\"name\">ES1</span>.<span class=\"name\">q8</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/Fintype/Basic.html#Fintype\">Fintype</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(G : <span class=\"fn\"><a href=\"./Mathlib/Combinatorics/SimpleGraph/Basic.html#SimpleGraph\">SimpleGraph</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableRel\">DecidableRel</a> <span class=\"fn\"><span class=\"fn\">G</span>.Adj</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∃ <span class=\"fn\">H</span> <span class=\"fn\">x</span>, <span class=\"fn\">∀ (<span class=\"fn\">a</span> : <span class=\"fn\">α</span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><a href=\"./LeanCamCombi/ExampleSheets/Graph/ES1.html#GraphTheory.ES1.averageDegree\">GraphTheory.ES1.averageDegree</a> <span class=\"fn\">G</span></span> <a href=\"./Init/Prelude.html#HDiv.hDiv\">/</a> <span class=\"fn\">2</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">↑(<span class=\"fn\"><a href=\"./Mathlib/Combinatorics/SimpleGraph/Subgraph.html#SimpleGraph.Subgraph.degree\">SimpleGraph.Subgraph.degree</a> <span class=\"fn\">H</span> <span class=\"fn\">a</span></span>)</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/YaelDillies/LeanCamCombi/blob/41ed909d6e8b5e6b618db6412ed63ba09eba61c3//LeanCamCombi/ExampleSheets/Graph/ES1.lean#L123-L124","name":"GraphTheory.ES1.averageDegree","line":123,"kind":"def","docLink":"./LeanCamCombi/ExampleSheets/Graph/ES1.html#GraphTheory.ES1.averageDegree","doc":"The average degree of a simple graph is the average of its degrees. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./LeanCamCombi/ExampleSheets/Graph/ES1.html#GraphTheory.ES1.averageDegree\"><span class=\"name\">GraphTheory</span>.<span class=\"name\">ES1</span>.<span class=\"name\">averageDegree</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/Fintype/Basic.html#Fintype\">Fintype</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(G : <span class=\"fn\"><a href=\"./Mathlib/Combinatorics/SimpleGraph/Basic.html#SimpleGraph\">SimpleGraph</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableRel\">DecidableRel</a> <span class=\"fn\"><span class=\"fn\">G</span>.Adj</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Std/Data/Rat/Basic.html#Rat\">ℚ</a></div></div>"},{"info":{"sourceLink":"https://github.com/YaelDillies/LeanCamCombi/blob/41ed909d6e8b5e6b618db6412ed63ba09eba61c3//LeanCamCombi/ExampleSheets/Graph/ES1.lean#L110-L113","name":"GraphTheory.ES1.q7","line":110,"kind":"theorem","docLink":"./LeanCamCombi/ExampleSheets/Graph/ES1.html#GraphTheory.ES1.q7","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./LeanCamCombi/ExampleSheets/Graph/ES1.html#GraphTheory.ES1.q7\"><span class=\"name\">GraphTheory</span>.<span class=\"name\">ES1</span>.<span class=\"name\">q7</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ι : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(G : <span class=\"fn\"><a href=\"./Mathlib/Combinatorics/SimpleGraph/Basic.html#SimpleGraph\">SimpleGraph</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hG : <span class=\"fn\"><a href=\"./Mathlib/Combinatorics/SimpleGraph/Acyclic.html#SimpleGraph.IsAcyclic\">SimpleGraph.IsAcyclic</a> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(s : <span class=\"fn\"><a href=\"./Mathlib/Data/Finset/Basic.html#Finset\">Finset</a> <span class=\"fn\">ι</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">ι</span> → <span class=\"fn\"><a href=\"./Mathlib/Combinatorics/SimpleGraph/Subgraph.html#SimpleGraph.Subgraph\">SimpleGraph.Subgraph</a> <span class=\"fn\">G</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hf : <span class=\"fn\">∀ (<span class=\"fn\">i</span> : <span class=\"fn\">ι</span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">i</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">s</span></span> → <span class=\"fn\"><a href=\"./Mathlib/Combinatorics/SimpleGraph/Acyclic.html#SimpleGraph.IsAcyclic\">SimpleGraph.IsAcyclic</a> (<span class=\"fn\"><a href=\"./Mathlib/Combinatorics/SimpleGraph/Subgraph.html#SimpleGraph.Subgraph.coe\">SimpleGraph.Subgraph.coe</a> (<span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">i</span></span>)</span>)</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\">∀ (<span class=\"fn\">i</span> : <span class=\"fn\">ι</span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">i</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">s</span></span> → <span class=\"fn\">∀ (<span class=\"fn\">j</span> : <span class=\"fn\">ι</span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">j</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">s</span></span> → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">i</span></span> <a href=\"./Mathlib/Order/Basic.html#Inf.inf\">⊓</a> <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">j</span></span></span> <a href=\"./Init/Core.html#Ne\">≠</a> <a href=\"./Mathlib/Order/BoundedOrder.html#Bot.bot\">⊥</a></span></span></span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Data/Finset/Lattice.html#Finset.inf\">Finset.inf</a> <span class=\"fn\">s</span> <span class=\"fn\">f</span></span> <a href=\"./Init/Core.html#Ne\">≠</a> <a href=\"./Mathlib/Order/BoundedOrder.html#Bot.bot\">⊥</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/YaelDillies/LeanCamCombi/blob/41ed909d6e8b5e6b618db6412ed63ba09eba61c3//LeanCamCombi/ExampleSheets/Graph/ES1.lean#L98-L101","name":"GraphTheory.ES1.q6","line":98,"kind":"theorem","docLink":"./LeanCamCombi/ExampleSheets/Graph/ES1.html#GraphTheory.ES1.q6","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./LeanCamCombi/ExampleSheets/Graph/ES1.html#GraphTheory.ES1.q6\"><span class=\"name\">GraphTheory</span>.<span class=\"name\">ES1</span>.<span class=\"name\">q6</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/Fintype/Basic.html#Fintype\">Fintype</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(s : <span class=\"fn\"><a href=\"./Mathlib/Data/Multiset/Basic.html#Multiset\">Multiset</a> <a href=\"./Init/Prelude.html#Nat\">ℕ</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hs : <span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">Multiset.card</span> <span class=\"fn\">s</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Data/Fintype/Card.html#Fintype.card\">Fintype.card</a> <span class=\"fn\">α</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(h₀ : <span class=\"fn\"><a href=\"./Init/Prelude.html#Not\">¬</a><span class=\"fn\"><span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">s</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/BigOperators/Multiset/Basic.html#Multiset.sum\">Multiset.sum</a> <span class=\"fn\">s</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">2</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><a href=\"./Mathlib/Data/Fintype/Card.html#Fintype.card\">Fintype.card</a> <span class=\"fn\">α</span></span></span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\">2</span></span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">∃ <span class=\"fn\">G</span> <span class=\"fn\">x</span>, <span class=\"fn\"><span class=\"fn\"><a href=\"./LeanCamCombi/ExampleSheets/Graph/ES1.html#GraphTheory.ES1.degreeSequence\">GraphTheory.ES1.degreeSequence</a> <span class=\"fn\">G</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">s</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/YaelDillies/LeanCamCombi/blob/41ed909d6e8b5e6b618db6412ed63ba09eba61c3//LeanCamCombi/ExampleSheets/Graph/ES1.lean#L95-L96","name":"GraphTheory.ES1.degreeSequence","line":95,"kind":"def","docLink":"./LeanCamCombi/ExampleSheets/Graph/ES1.html#GraphTheory.ES1.degreeSequence","doc":"The finset of degrees of a finite graph. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./LeanCamCombi/ExampleSheets/Graph/ES1.html#GraphTheory.ES1.degreeSequence\"><span class=\"name\">GraphTheory</span>.<span class=\"name\">ES1</span>.<span class=\"name\">degreeSequence</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/Fintype/Basic.html#Fintype\">Fintype</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(G : <span class=\"fn\"><a href=\"./Mathlib/Combinatorics/SimpleGraph/Basic.html#SimpleGraph\">SimpleGraph</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableRel\">DecidableRel</a> <span class=\"fn\"><span class=\"fn\">G</span>.Adj</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Data/Multiset/Basic.html#Multiset\">Multiset</a> <a href=\"./Init/Prelude.html#Nat\">ℕ</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/YaelDillies/LeanCamCombi/blob/41ed909d6e8b5e6b618db6412ed63ba09eba61c3//LeanCamCombi/ExampleSheets/Graph/ES1.lean#L79-L83","name":"GraphTheory.ES1.q5","line":79,"kind":"theorem","docLink":"./LeanCamCombi/ExampleSheets/Graph/ES1.html#GraphTheory.ES1.q5","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./LeanCamCombi/ExampleSheets/Graph/ES1.html#GraphTheory.ES1.q5\"><span class=\"name\">GraphTheory</span>.<span class=\"name\">ES1</span>.<span class=\"name\">q5</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/Fintype/Basic.html#Fintype\">Fintype</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(G : <span class=\"fn\"><a href=\"./Mathlib/Combinatorics/SimpleGraph/Basic.html#SimpleGraph\">SimpleGraph</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableRel\">DecidableRel</a> <span class=\"fn\"><span class=\"fn\">G</span>.Adj</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hG : <span class=\"fn\"><a href=\"./Mathlib/Combinatorics/SimpleGraph/Acyclic.html#SimpleGraph.IsAcyclic\">SimpleGraph.IsAcyclic</a> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Data/Finset/Card.html#Finset.card\">Finset.card</a> (<span class=\"fn\"><a href=\"./Mathlib/Combinatorics/SimpleGraph/Basic.html#SimpleGraph.edgeFinset\">SimpleGraph.edgeFinset</a> <span class=\"fn\">G</span></span>)</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Data/Fintype/Card.html#Fintype.card\">Fintype.card</a> <span class=\"fn\">α</span></span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\">1</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/YaelDillies/LeanCamCombi/blob/41ed909d6e8b5e6b618db6412ed63ba09eba61c3//LeanCamCombi/ExampleSheets/Graph/ES1.lean#L67-L70","name":"GraphTheory.ES1.q4","line":67,"kind":"theorem","docLink":"./LeanCamCombi/ExampleSheets/Graph/ES1.html#GraphTheory.ES1.q4","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./LeanCamCombi/ExampleSheets/Graph/ES1.html#GraphTheory.ES1.q4\"><span class=\"name\">GraphTheory</span>.<span class=\"name\">ES1</span>.<span class=\"name\">q4</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/Finite/Defs.html#Finite\">Finite</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Logic/Nontrivial/Defs.html#Nontrivial\">Nontrivial</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(G : <span class=\"fn\"><a href=\"./Mathlib/Combinatorics/SimpleGraph/Basic.html#SimpleGraph\">SimpleGraph</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hG : <span class=\"fn\"><a href=\"./Mathlib/Combinatorics/SimpleGraph/Connectivity.html#SimpleGraph.Connected\">SimpleGraph.Connected</a> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∃ <span class=\"fn\">a</span>, <span class=\"fn\"><a href=\"./Mathlib/Combinatorics/SimpleGraph/Connectivity.html#SimpleGraph.Connected\">SimpleGraph.Connected</a> (<span class=\"fn\"><a href=\"./Mathlib/Combinatorics/SimpleGraph/Subgraph.html#SimpleGraph.Subgraph.coe\">SimpleGraph.Subgraph.coe</a> (<span class=\"fn\"><a href=\"./Mathlib/Combinatorics/SimpleGraph/Subgraph.html#SimpleGraph.Subgraph.deleteVerts\">SimpleGraph.Subgraph.deleteVerts</a> <a href=\"./Mathlib/Order/BoundedOrder.html#Top.top\">⊤</a> <span class=\"fn\">{<span class=\"fn\">a</span>}</span></span>)</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/YaelDillies/LeanCamCombi/blob/41ed909d6e8b5e6b618db6412ed63ba09eba61c3//LeanCamCombi/ExampleSheets/Graph/ES1.lean#L55-L57","name":"GraphTheory.ES1.q3","line":55,"kind":"theorem","docLink":"./LeanCamCombi/ExampleSheets/Graph/ES1.html#GraphTheory.ES1.q3","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./LeanCamCombi/ExampleSheets/Graph/ES1.html#GraphTheory.ES1.q3\"><span class=\"name\">GraphTheory</span>.<span class=\"name\">ES1</span>.<span class=\"name\">q3</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/Fintype/Basic.html#Fintype\">Fintype</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(G : <span class=\"fn\"><a href=\"./Mathlib/Combinatorics/SimpleGraph/Basic.html#SimpleGraph\">SimpleGraph</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableRel\">DecidableRel</a> <span class=\"fn\"><span class=\"fn\">G</span>.Adj</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∃ <span class=\"fn\">a</span> <span class=\"fn\">b</span>, <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">b</span></span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Combinatorics/SimpleGraph/Basic.html#SimpleGraph.degree\">SimpleGraph.degree</a> <span class=\"fn\">G</span> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Combinatorics/SimpleGraph/Basic.html#SimpleGraph.degree\">SimpleGraph.degree</a> <span class=\"fn\">G</span> <span class=\"fn\">b</span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/YaelDillies/LeanCamCombi/blob/41ed909d6e8b5e6b618db6412ed63ba09eba61c3//LeanCamCombi/ExampleSheets/Graph/ES1.lean#L36-L38","name":"GraphTheory.ES1.q1","line":36,"kind":"theorem","docLink":"./LeanCamCombi/ExampleSheets/Graph/ES1.html#GraphTheory.ES1.q1","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./LeanCamCombi/ExampleSheets/Graph/ES1.html#GraphTheory.ES1.q1\"><span class=\"name\">GraphTheory</span>.<span class=\"name\">ES1</span>.<span class=\"name\">q1</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(G : <span class=\"fn\"><a href=\"./Mathlib/Combinatorics/SimpleGraph/Basic.html#SimpleGraph\">SimpleGraph</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(a : <span class=\"fn\">α</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(w : <span class=\"fn\"><a href=\"./Mathlib/Combinatorics/SimpleGraph/Connectivity.html#SimpleGraph.Walk\">SimpleGraph.Walk</a> <span class=\"fn\">G</span> <span class=\"fn\">a</span> <span class=\"fn\">a</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hw : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Parity.html#Odd\">Odd</a> (<span class=\"fn\"><a href=\"./Mathlib/Combinatorics/SimpleGraph/Connectivity.html#SimpleGraph.Walk.length\">SimpleGraph.Walk.length</a> <span class=\"fn\">w</span></span>)</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∃ <span class=\"fn\">b</span> <span class=\"fn\">p</span>, <span class=\"fn\"><a href=\"./Mathlib/Algebra/Parity.html#Odd\">Odd</a> (<span class=\"fn\"><a href=\"./Mathlib/Combinatorics/SimpleGraph/Connectivity.html#SimpleGraph.Walk.length\">SimpleGraph.Walk.length</a> <span class=\"fn\">↑<span class=\"fn\">p</span></span></span>)</span></span></div></div>"}]}