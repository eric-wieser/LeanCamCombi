{"name":"LeanCamCombi.Mathlib.Combinatorics.Colex","instances":[{"typeNames":["Finset.Wolex"],"name":"Finset.instInhabitedWolex","className":"Inhabited"},{"typeNames":["Finset.Wolex"],"name":"Finset.Wolex.instLT","className":"LT"},{"typeNames":["Finset.Wolex"],"name":"Finset.Wolex.instLE","className":"LE"},{"typeNames":["Finset.Wolex","Finset.Wolex","LT.lt","Finset.Wolex.instLT"],"name":"Finset.Wolex.instIsIrrefl","className":"IsIrrefl"},{"typeNames":["Finset.Wolex","Finset.Wolex","LT.lt","Finset.Wolex.instLT","Preorder.toLT","PartialOrder.toPreorder","SemilatticeInf.toPartialOrder","Lattice.toSemilatticeInf","DistribLattice.toLattice","instDistribLattice"],"name":"Finset.Wolex.instIsStrictTotalOrderWolexLtInstLTToLTToPreorderToPartialOrderToSemilatticeInfToLatticeInstDistribLattice","className":"IsStrictTotalOrder"},{"typeNames":["Finset.Wolex","LT.lt","Finset.Wolex.instLT","Preorder.toLT","PartialOrder.toPreorder","SemilatticeInf.toPartialOrder","Lattice.toSemilatticeInf","DistribLattice.toLattice","instDistribLattice"],"name":"Finset.Wolex.instDecidableLT","className":"Decidable"},{"typeNames":["Finset.Wolex"],"name":"Finset.Wolex.instLinearOrder","className":"LinearOrder"},{"typeNames":["Finset.Wolex"],"name":"Finset.Wolex.instBot","className":"Bot"},{"typeNames":["Finset.Wolex","Finset.Wolex.instLE","Preorder.toLT","PartialOrder.toPreorder","SemilatticeInf.toPartialOrder","Lattice.toSemilatticeInf","DistribLattice.toLattice","instDistribLattice"],"name":"Finset.Wolex.instOrderBot","className":"OrderBot"},{"typeNames":["Finset.Wolex","Finset.Wolex.instLE","Preorder.toLT","PartialOrder.toPreorder","SemilatticeInf.toPartialOrder","Lattice.toSemilatticeInf","DistribLattice.toLattice","instDistribLattice"],"name":"Finset.Wolex.instBoundedOrderWolexInstLEToLTToPreorderToPartialOrderToSemilatticeInfToLatticeInstDistribLattice","className":"BoundedOrder"}],"imports":["Init","Mathlib.Combinatorics.Colex","Mathlib.Data.Finset.Slice","Mathlib.Order.SupClosed"],"declarations":[{"info":{"sourceLink":"https://github.com/YaelDillies/LeanCamCombi/blob/41ed909d6e8b5e6b618db6412ed63ba09eba61c3//LeanCamCombi/Mathlib/Combinatorics/Colex.lean#L367-L369","name":"Finset.sum_two_pow_le_iff_wolex_le","line":367,"kind":"theorem","docLink":"./LeanCamCombi/Mathlib/Combinatorics/Colex.html#Finset.sum_two_pow_le_iff_wolex_le","doc":"For subsets of ‚Ñï, we can show that wolex is equivalent to binary. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./LeanCamCombi/Mathlib/Combinatorics/Colex.html#Finset.sum_two_pow_le_iff_wolex_le\"><span class=\"name\">Finset</span>.<span class=\"name\">sum_two_pow_le_iff_wolex_le</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(s : <span class=\"fn\"><a href=\"./Mathlib/Data/Finset/Basic.html#Finset\">Finset</a> <a href=\"./Init/Prelude.html#Nat\">‚Ñï</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(t : <span class=\"fn\"><a href=\"./Mathlib/Data/Finset/Basic.html#Finset\">Finset</a> <a href=\"./Init/Prelude.html#Nat\">‚Ñï</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">(<span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/BigOperators/Basic.html#Finset.sum\">Finset.sum</a> <span class=\"fn\">s</span> <span class=\"fn\">fun <span class=\"fn\">i</span> =&gt <span class=\"fn\"><span class=\"fn\">2</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">i</span></span></span></span>) <a href=\"./Init/Prelude.html#LE.le\">‚â§</a> <span class=\"fn\"><a href=\"./Mathlib/Algebra/BigOperators/Basic.html#Finset.sum\">Finset.sum</a> <span class=\"fn\">t</span> <span class=\"fn\">fun <span class=\"fn\">i</span> =&gt <span class=\"fn\"><span class=\"fn\">2</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">i</span></span></span></span></span>) <a href=\"./Init/Core.html#Iff\">‚Üî</a> <span class=\"fn\"><span class=\"fn\">‚Üë<span class=\"fn\">Finset.toWolex</span> <span class=\"fn\">s</span></span> <a href=\"./Init/Prelude.html#LE.le\">‚â§</a> <span class=\"fn\">‚Üë<span class=\"fn\">Finset.toWolex</span> <span class=\"fn\">t</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/YaelDillies/LeanCamCombi/blob/41ed909d6e8b5e6b618db6412ed63ba09eba61c3//LeanCamCombi/Mathlib/Combinatorics/Colex.lean#L343-L364","name":"Finset.sum_two_pow_lt_iff_wolex_lt","line":343,"kind":"theorem","docLink":"./LeanCamCombi/Mathlib/Combinatorics/Colex.html#Finset.sum_two_pow_lt_iff_wolex_lt","doc":"For subsets of ‚Ñï, we can show that wolex is equivalent to binary. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./LeanCamCombi/Mathlib/Combinatorics/Colex.html#Finset.sum_two_pow_lt_iff_wolex_lt\"><span class=\"name\">Finset</span>.<span class=\"name\">sum_two_pow_lt_iff_wolex_lt</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(s : <span class=\"fn\"><a href=\"./Mathlib/Data/Finset/Basic.html#Finset\">Finset</a> <a href=\"./Init/Prelude.html#Nat\">‚Ñï</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(t : <span class=\"fn\"><a href=\"./Mathlib/Data/Finset/Basic.html#Finset\">Finset</a> <a href=\"./Init/Prelude.html#Nat\">‚Ñï</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">(<span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/BigOperators/Basic.html#Finset.sum\">Finset.sum</a> <span class=\"fn\">s</span> <span class=\"fn\">fun <span class=\"fn\">i</span> =&gt <span class=\"fn\"><span class=\"fn\">2</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">i</span></span></span></span>) <a href=\"./Init/Prelude.html#LT.lt\">&lt</a> <span class=\"fn\"><a href=\"./Mathlib/Algebra/BigOperators/Basic.html#Finset.sum\">Finset.sum</a> <span class=\"fn\">t</span> <span class=\"fn\">fun <span class=\"fn\">i</span> =&gt <span class=\"fn\"><span class=\"fn\">2</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">i</span></span></span></span></span>) <a href=\"./Init/Core.html#Iff\">‚Üî</a> <span class=\"fn\"><span class=\"fn\">‚Üë<span class=\"fn\">Finset.toWolex</span> <span class=\"fn\">s</span></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt</a> <span class=\"fn\">‚Üë<span class=\"fn\">Finset.toWolex</span> <span class=\"fn\">t</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/YaelDillies/LeanCamCombi/blob/41ed909d6e8b5e6b618db6412ed63ba09eba61c3//LeanCamCombi/Mathlib/Combinatorics/Colex.lean#L322-L326","name":"Finset.Wolex.isInitSeg_iff_exists_initSeg","line":322,"kind":"theorem","docLink":"./LeanCamCombi/Mathlib/Combinatorics/Colex.html#Finset.Wolex.isInitSeg_iff_exists_initSeg","doc":"Being a nonempty initial segment of wolex if equivalent to being an `initSeg`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./LeanCamCombi/Mathlib/Combinatorics/Colex.html#Finset.Wolex.isInitSeg_iff_exists_initSeg\"><span class=\"name\">Finset</span>.<span class=\"name\">Wolex</span>.<span class=\"name\">isInitSeg_iff_exists_initSeg</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ± : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Init/Order/Defs.html#LinearOrder\">LinearOrder</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ùíú : <span class=\"fn\"><a href=\"./Mathlib/Data/Finset/Basic.html#Finset\">Finset</a> (<span class=\"fn\"><a href=\"./Mathlib/Data/Finset/Basic.html#Finset\">Finset</a> <span class=\"fn\">Œ±</span></span>)</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{r : <a href=\"./Init/Prelude.html#Nat\">‚Ñï</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/Fintype/Basic.html#Fintype\">Fintype</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><a href=\"./LeanCamCombi/Mathlib/Combinatorics/Colex.html#Finset.Wolex.IsInitSeg\">Finset.Wolex.IsInitSeg</a> <span class=\"fn\">ùíú</span> <span class=\"fn\">r</span></span> <a href=\"./Init/Prelude.html#And\">‚àß</a> <span class=\"fn\"><a href=\"./Mathlib/Data/Finset/Basic.html#Finset.Nonempty\">Finset.Nonempty</a> <span class=\"fn\">ùíú</span></span></span> <a href=\"./Init/Core.html#Iff\">‚Üî</a> <span class=\"fn\">‚àÉ <span class=\"fn\">s</span>, <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Data/Finset/Card.html#Finset.card\">Finset.card</a> <span class=\"fn\">s</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">r</span></span> <a href=\"./Init/Prelude.html#And\">‚àß</a> <span class=\"fn\"><span class=\"fn\">ùíú</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./LeanCamCombi/Mathlib/Combinatorics/Colex.html#Finset.Wolex.initSeg\">Finset.Wolex.initSeg</a> <span class=\"fn\">s</span></span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/YaelDillies/LeanCamCombi/blob/41ed909d6e8b5e6b618db6412ed63ba09eba61c3//LeanCamCombi/Mathlib/Combinatorics/Colex.lean#L306-L319","name":"Finset.Wolex.IsInitSeg.exists_initSeg","line":306,"kind":"theorem","docLink":"./LeanCamCombi/Mathlib/Combinatorics/Colex.html#Finset.Wolex.IsInitSeg.exists_initSeg","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./LeanCamCombi/Mathlib/Combinatorics/Colex.html#Finset.Wolex.IsInitSeg.exists_initSeg\"><span class=\"name\">Finset</span>.<span class=\"name\">Wolex</span>.<span class=\"name\">IsInitSeg</span>.<span class=\"name\">exists_initSeg</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ± : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Init/Order/Defs.html#LinearOrder\">LinearOrder</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ùíú : <span class=\"fn\"><a href=\"./Mathlib/Data/Finset/Basic.html#Finset\">Finset</a> (<span class=\"fn\"><a href=\"./Mathlib/Data/Finset/Basic.html#Finset\">Finset</a> <span class=\"fn\">Œ±</span></span>)</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{r : <a href=\"./Init/Prelude.html#Nat\">‚Ñï</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/Fintype/Basic.html#Fintype\">Fintype</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hùíú : <span class=\"fn\"><a href=\"./LeanCamCombi/Mathlib/Combinatorics/Colex.html#Finset.Wolex.IsInitSeg\">Finset.Wolex.IsInitSeg</a> <span class=\"fn\">ùíú</span> <span class=\"fn\">r</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hùíú‚ÇÄ : <span class=\"fn\"><a href=\"./Mathlib/Data/Finset/Basic.html#Finset.Nonempty\">Finset.Nonempty</a> <span class=\"fn\">ùíú</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">‚àÉ <span class=\"fn\">s</span>, <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Data/Finset/Card.html#Finset.card\">Finset.card</a> <span class=\"fn\">s</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">r</span></span> <a href=\"./Init/Prelude.html#And\">‚àß</a> <span class=\"fn\"><span class=\"fn\">ùíú</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./LeanCamCombi/Mathlib/Combinatorics/Colex.html#Finset.Wolex.initSeg\">Finset.Wolex.initSeg</a> <span class=\"fn\">s</span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/YaelDillies/LeanCamCombi/blob/41ed909d6e8b5e6b618db6412ed63ba09eba61c3//LeanCamCombi/Mathlib/Combinatorics/Colex.lean#L301-L304","name":"Finset.Wolex.isInitSeg_initSeg","line":301,"kind":"theorem","docLink":"./LeanCamCombi/Mathlib/Combinatorics/Colex.html#Finset.Wolex.isInitSeg_initSeg","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./LeanCamCombi/Mathlib/Combinatorics/Colex.html#Finset.Wolex.isInitSeg_initSeg\"><span class=\"name\">Finset</span>.<span class=\"name\">Wolex</span>.<span class=\"name\">isInitSeg_initSeg</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ± : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Init/Order/Defs.html#LinearOrder\">LinearOrder</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{s : <span class=\"fn\"><a href=\"./Mathlib/Data/Finset/Basic.html#Finset\">Finset</a> <span class=\"fn\">Œ±</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/Fintype/Basic.html#Fintype\">Fintype</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./LeanCamCombi/Mathlib/Combinatorics/Colex.html#Finset.Wolex.IsInitSeg\">Finset.Wolex.IsInitSeg</a> (<span class=\"fn\"><a href=\"./LeanCamCombi/Mathlib/Combinatorics/Colex.html#Finset.Wolex.initSeg\">Finset.Wolex.initSeg</a> <span class=\"fn\">s</span></span>) (<span class=\"fn\"><a href=\"./Mathlib/Data/Finset/Card.html#Finset.card\">Finset.card</a> <span class=\"fn\">s</span></span>)</span></div></div>"},{"info":{"sourceLink":"https://github.com/YaelDillies/LeanCamCombi/blob/41ed909d6e8b5e6b618db6412ed63ba09eba61c3//LeanCamCombi/Mathlib/Combinatorics/Colex.lean#L299-L299","name":"Finset.Wolex.initSeg_nonempty","line":299,"kind":"theorem","docLink":"./LeanCamCombi/Mathlib/Combinatorics/Colex.html#Finset.Wolex.initSeg_nonempty","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./LeanCamCombi/Mathlib/Combinatorics/Colex.html#Finset.Wolex.initSeg_nonempty\"><span class=\"name\">Finset</span>.<span class=\"name\">Wolex</span>.<span class=\"name\">initSeg_nonempty</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ± : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Init/Order/Defs.html#LinearOrder\">LinearOrder</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{s : <span class=\"fn\"><a href=\"./Mathlib/Data/Finset/Basic.html#Finset\">Finset</a> <span class=\"fn\">Œ±</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/Fintype/Basic.html#Fintype\">Fintype</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Data/Finset/Basic.html#Finset.Nonempty\">Finset.Nonempty</a> (<span class=\"fn\"><a href=\"./LeanCamCombi/Mathlib/Combinatorics/Colex.html#Finset.Wolex.initSeg\">Finset.Wolex.initSeg</a> <span class=\"fn\">s</span></span>)</span></div></div>"},{"info":{"sourceLink":"https://github.com/YaelDillies/LeanCamCombi/blob/41ed909d6e8b5e6b618db6412ed63ba09eba61c3//LeanCamCombi/Mathlib/Combinatorics/Colex.lean#L298-L298","name":"Finset.Wolex.mem_initSeg_self","line":298,"kind":"theorem","docLink":"./LeanCamCombi/Mathlib/Combinatorics/Colex.html#Finset.Wolex.mem_initSeg_self","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./LeanCamCombi/Mathlib/Combinatorics/Colex.html#Finset.Wolex.mem_initSeg_self\"><span class=\"name\">Finset</span>.<span class=\"name\">Wolex</span>.<span class=\"name\">mem_initSeg_self</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ± : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Init/Order/Defs.html#LinearOrder\">LinearOrder</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{s : <span class=\"fn\"><a href=\"./Mathlib/Data/Finset/Basic.html#Finset\">Finset</a> <span class=\"fn\">Œ±</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/Fintype/Basic.html#Fintype\">Fintype</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">s</span> <a href=\"./Init/Prelude.html#Membership.mem\">‚àà</a> <span class=\"fn\"><a href=\"./LeanCamCombi/Mathlib/Combinatorics/Colex.html#Finset.Wolex.initSeg\">Finset.Wolex.initSeg</a> <span class=\"fn\">s</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/YaelDillies/LeanCamCombi/blob/41ed909d6e8b5e6b618db6412ed63ba09eba61c3//LeanCamCombi/Mathlib/Combinatorics/Colex.lean#L296-L296","name":"Finset.Wolex.mem_initSeg","line":296,"kind":"theorem","docLink":"./LeanCamCombi/Mathlib/Combinatorics/Colex.html#Finset.Wolex.mem_initSeg","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./LeanCamCombi/Mathlib/Combinatorics/Colex.html#Finset.Wolex.mem_initSeg\"><span class=\"name\">Finset</span>.<span class=\"name\">Wolex</span>.<span class=\"name\">mem_initSeg</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ± : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Init/Order/Defs.html#LinearOrder\">LinearOrder</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{s : <span class=\"fn\"><a href=\"./Mathlib/Data/Finset/Basic.html#Finset\">Finset</a> <span class=\"fn\">Œ±</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{t : <span class=\"fn\"><a href=\"./Mathlib/Data/Finset/Basic.html#Finset\">Finset</a> <span class=\"fn\">Œ±</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/Fintype/Basic.html#Fintype\">Fintype</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">t</span> <a href=\"./Init/Prelude.html#Membership.mem\">‚àà</a> <span class=\"fn\"><a href=\"./LeanCamCombi/Mathlib/Combinatorics/Colex.html#Finset.Wolex.initSeg\">Finset.Wolex.initSeg</a> <span class=\"fn\">s</span></span></span> <a href=\"./Init/Core.html#Iff\">‚Üî</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Data/Finset/Card.html#Finset.card\">Finset.card</a> <span class=\"fn\">s</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Data/Finset/Card.html#Finset.card\">Finset.card</a> <span class=\"fn\">t</span></span></span> <a href=\"./Init/Prelude.html#And\">‚àß</a> <span class=\"fn\"><span class=\"fn\">‚Üë<span class=\"fn\">Finset.toWolex</span> <span class=\"fn\">t</span></span> <a href=\"./Init/Prelude.html#LE.le\">‚â§</a> <span class=\"fn\">‚Üë<span class=\"fn\">Finset.toWolex</span> <span class=\"fn\">s</span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/YaelDillies/LeanCamCombi/blob/41ed909d6e8b5e6b618db6412ed63ba09eba61c3//LeanCamCombi/Mathlib/Combinatorics/Colex.lean#L292-L293","name":"Finset.Wolex.initSeg","line":292,"kind":"def","docLink":"./LeanCamCombi/Mathlib/Combinatorics/Colex.html#Finset.Wolex.initSeg","doc":"Gives all sets up to `s` with the same size as it: this is equivalent to\nbeing an initial segment of wolex. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./LeanCamCombi/Mathlib/Combinatorics/Colex.html#Finset.Wolex.initSeg\"><span class=\"name\">Finset</span>.<span class=\"name\">Wolex</span>.<span class=\"name\">initSeg</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ± : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Init/Order/Defs.html#LinearOrder\">LinearOrder</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/Fintype/Basic.html#Fintype\">Fintype</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(s : <span class=\"fn\"><a href=\"./Mathlib/Data/Finset/Basic.html#Finset\">Finset</a> <span class=\"fn\">Œ±</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Data/Finset/Basic.html#Finset\">Finset</a> (<span class=\"fn\"><a href=\"./Mathlib/Data/Finset/Basic.html#Finset\">Finset</a> <span class=\"fn\">Œ±</span></span>)</span></div></div>"},{"info":{"sourceLink":"https://github.com/YaelDillies/LeanCamCombi/blob/41ed909d6e8b5e6b618db6412ed63ba09eba61c3//LeanCamCombi/Mathlib/Combinatorics/Colex.lean#L277-L286","name":"Finset.Wolex.IsInitSeg.total","line":277,"kind":"theorem","docLink":"./LeanCamCombi/Mathlib/Combinatorics/Colex.html#Finset.Wolex.IsInitSeg.total","doc":"Initial segments are nested in some way. In particular, if they're the same size they're equal.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./LeanCamCombi/Mathlib/Combinatorics/Colex.html#Finset.Wolex.IsInitSeg.total\"><span class=\"name\">Finset</span>.<span class=\"name\">Wolex</span>.<span class=\"name\">IsInitSeg</span>.<span class=\"name\">total</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ± : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Init/Order/Defs.html#LinearOrder\">LinearOrder</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ùíú‚ÇÅ : <span class=\"fn\"><a href=\"./Mathlib/Data/Finset/Basic.html#Finset\">Finset</a> (<span class=\"fn\"><a href=\"./Mathlib/Data/Finset/Basic.html#Finset\">Finset</a> <span class=\"fn\">Œ±</span></span>)</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ùíú‚ÇÇ : <span class=\"fn\"><a href=\"./Mathlib/Data/Finset/Basic.html#Finset\">Finset</a> (<span class=\"fn\"><a href=\"./Mathlib/Data/Finset/Basic.html#Finset\">Finset</a> <span class=\"fn\">Œ±</span></span>)</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{r : <a href=\"./Init/Prelude.html#Nat\">‚Ñï</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h‚ÇÅ : <span class=\"fn\"><a href=\"./LeanCamCombi/Mathlib/Combinatorics/Colex.html#Finset.Wolex.IsInitSeg\">Finset.Wolex.IsInitSeg</a> <span class=\"fn\">ùíú‚ÇÅ</span> <span class=\"fn\">r</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(h‚ÇÇ : <span class=\"fn\"><a href=\"./LeanCamCombi/Mathlib/Combinatorics/Colex.html#Finset.Wolex.IsInitSeg\">Finset.Wolex.IsInitSeg</a> <span class=\"fn\">ùíú‚ÇÇ</span> <span class=\"fn\">r</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">ùíú‚ÇÅ</span> <a href=\"./Std/Classes/SetNotation.html#HasSubset.Subset\">‚äÜ</a> <span class=\"fn\">ùíú‚ÇÇ</span></span> <a href=\"./Init/Prelude.html#Or\">‚à®</a> <span class=\"fn\"><span class=\"fn\">ùíú‚ÇÇ</span> <a href=\"./Std/Classes/SetNotation.html#HasSubset.Subset\">‚äÜ</a> <span class=\"fn\">ùíú‚ÇÅ</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/YaelDillies/LeanCamCombi/blob/41ed909d6e8b5e6b618db6412ed63ba09eba61c3//LeanCamCombi/Mathlib/Combinatorics/Colex.lean#L273-L273","name":"Finset.Wolex.isInitSeg_empty","line":273,"kind":"theorem","docLink":"./LeanCamCombi/Mathlib/Combinatorics/Colex.html#Finset.Wolex.isInitSeg_empty","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./LeanCamCombi/Mathlib/Combinatorics/Colex.html#Finset.Wolex.isInitSeg_empty\"><span class=\"name\">Finset</span>.<span class=\"name\">Wolex</span>.<span class=\"name\">isInitSeg_empty</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ± : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Init/Order/Defs.html#LinearOrder\">LinearOrder</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{r : <a href=\"./Init/Prelude.html#Nat\">‚Ñï</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./LeanCamCombi/Mathlib/Combinatorics/Colex.html#Finset.Wolex.IsInitSeg\">Finset.Wolex.IsInitSeg</a> <a href=\"./Init/Core.html#EmptyCollection.emptyCollection\">‚àÖ</a> <span class=\"fn\">r</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/YaelDillies/LeanCamCombi/blob/41ed909d6e8b5e6b618db6412ed63ba09eba61c3//LeanCamCombi/Mathlib/Combinatorics/Colex.lean#L269-L271","name":"Finset.Wolex.IsInitSeg","line":269,"kind":"def","docLink":"./LeanCamCombi/Mathlib/Combinatorics/Colex.html#Finset.Wolex.IsInitSeg","doc":"`ùíú` is an initial segment of the wolexigraphic order on sets of `r`, and that if `t` is below\n`s` in wolex where `t` has size `r` and `s` is in `ùíú`, then `t` is also in `ùíú`. In effect, `ùíú` is\ndownwards closed with respect to wolex among sets of size `r`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./LeanCamCombi/Mathlib/Combinatorics/Colex.html#Finset.Wolex.IsInitSeg\"><span class=\"name\">Finset</span>.<span class=\"name\">Wolex</span>.<span class=\"name\">IsInitSeg</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ± : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Init/Order/Defs.html#LinearOrder\">LinearOrder</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(ùíú : <span class=\"fn\"><a href=\"./Mathlib/Data/Finset/Basic.html#Finset\">Finset</a> (<span class=\"fn\"><a href=\"./Mathlib/Data/Finset/Basic.html#Finset\">Finset</a> <span class=\"fn\">Œ±</span></span>)</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(r : <a href=\"./Init/Prelude.html#Nat\">‚Ñï</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Prop</a></div></div>"},{"info":{"sourceLink":"https://github.com/YaelDillies/LeanCamCombi/blob/41ed909d6e8b5e6b618db6412ed63ba09eba61c3//LeanCamCombi/Mathlib/Combinatorics/Colex.lean#L260-L262","name":"Finset.Wolex.toWolex_image_le_toWolex_image","line":260,"kind":"theorem","docLink":"./LeanCamCombi/Mathlib/Combinatorics/Colex.html#Finset.Wolex.toWolex_image_le_toWolex_image","doc":"Strictly monotone functions preserve the wolex ordering. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./LeanCamCombi/Mathlib/Combinatorics/Colex.html#Finset.Wolex.toWolex_image_le_toWolex_image\"><span class=\"name\">Finset</span>.<span class=\"name\">Wolex</span>.<span class=\"name\">toWolex_image_le_toWolex_image</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ± : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ≤ : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Init/Order/Defs.html#LinearOrder\">LinearOrder</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Init/Order/Defs.html#LinearOrder\">LinearOrder</a> <span class=\"fn\">Œ≤</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><span class=\"fn\">Œ±</span> ‚Üí <span class=\"fn\">Œ≤</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{s : <span class=\"fn\"><a href=\"./Mathlib/Data/Finset/Basic.html#Finset\">Finset</a> <span class=\"fn\">Œ±</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{t : <span class=\"fn\"><a href=\"./Mathlib/Data/Finset/Basic.html#Finset\">Finset</a> <span class=\"fn\">Œ±</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hf : <span class=\"fn\"><a href=\"./Mathlib/Order/Monotone/Basic.html#StrictMono\">StrictMono</a> <span class=\"fn\">f</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">‚Üë<span class=\"fn\">Finset.toWolex</span> (<span class=\"fn\"><a href=\"./Mathlib/Data/Finset/Image.html#Finset.image\">Finset.image</a> <span class=\"fn\">f</span> <span class=\"fn\">s</span></span>)</span> <a href=\"./Init/Prelude.html#LE.le\">‚â§</a> <span class=\"fn\">‚Üë<span class=\"fn\">Finset.toWolex</span> (<span class=\"fn\"><a href=\"./Mathlib/Data/Finset/Image.html#Finset.image\">Finset.image</a> <span class=\"fn\">f</span> <span class=\"fn\">t</span></span>)</span></span> <a href=\"./Init/Core.html#Iff\">‚Üî</a> <span class=\"fn\"><span class=\"fn\">‚Üë<span class=\"fn\">Finset.toWolex</span> <span class=\"fn\">s</span></span> <a href=\"./Init/Prelude.html#LE.le\">‚â§</a> <span class=\"fn\">‚Üë<span class=\"fn\">Finset.toWolex</span> <span class=\"fn\">t</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/YaelDillies/LeanCamCombi/blob/41ed909d6e8b5e6b618db6412ed63ba09eba61c3//LeanCamCombi/Mathlib/Combinatorics/Colex.lean#L239-L257","name":"Finset.Wolex.toWolex_image_lt_toWolex_image","line":239,"kind":"theorem","docLink":"./LeanCamCombi/Mathlib/Combinatorics/Colex.html#Finset.Wolex.toWolex_image_lt_toWolex_image","doc":"Strictly monotone functions preserve the wolex ordering. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./LeanCamCombi/Mathlib/Combinatorics/Colex.html#Finset.Wolex.toWolex_image_lt_toWolex_image\"><span class=\"name\">Finset</span>.<span class=\"name\">Wolex</span>.<span class=\"name\">toWolex_image_lt_toWolex_image</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ± : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ≤ : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Init/Order/Defs.html#LinearOrder\">LinearOrder</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Init/Order/Defs.html#LinearOrder\">LinearOrder</a> <span class=\"fn\">Œ≤</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><span class=\"fn\">Œ±</span> ‚Üí <span class=\"fn\">Œ≤</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{s : <span class=\"fn\"><a href=\"./Mathlib/Data/Finset/Basic.html#Finset\">Finset</a> <span class=\"fn\">Œ±</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{t : <span class=\"fn\"><a href=\"./Mathlib/Data/Finset/Basic.html#Finset\">Finset</a> <span class=\"fn\">Œ±</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hf : <span class=\"fn\"><a href=\"./Mathlib/Order/Monotone/Basic.html#StrictMono\">StrictMono</a> <span class=\"fn\">f</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">‚Üë<span class=\"fn\">Finset.toWolex</span> (<span class=\"fn\"><a href=\"./Mathlib/Data/Finset/Image.html#Finset.image\">Finset.image</a> <span class=\"fn\">f</span> <span class=\"fn\">s</span></span>)</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt</a> <span class=\"fn\">‚Üë<span class=\"fn\">Finset.toWolex</span> (<span class=\"fn\"><a href=\"./Mathlib/Data/Finset/Image.html#Finset.image\">Finset.image</a> <span class=\"fn\">f</span> <span class=\"fn\">t</span></span>)</span></span> <a href=\"./Init/Core.html#Iff\">‚Üî</a> <span class=\"fn\"><span class=\"fn\">‚Üë<span class=\"fn\">Finset.toWolex</span> <span class=\"fn\">s</span></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt</a> <span class=\"fn\">‚Üë<span class=\"fn\">Finset.toWolex</span> <span class=\"fn\">t</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/YaelDillies/LeanCamCombi/blob/41ed909d6e8b5e6b618db6412ed63ba09eba61c3//LeanCamCombi/Mathlib/Combinatorics/Colex.lean#L232-L236","name":"Finset.Wolex.forall_lt_mono","line":232,"kind":"theorem","docLink":"./LeanCamCombi/Mathlib/Combinatorics/Colex.html#Finset.Wolex.forall_lt_mono","doc":"If `s` is before `t` in wolex, and everything in `t` is small, then everything in `s` is small.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./LeanCamCombi/Mathlib/Combinatorics/Colex.html#Finset.Wolex.forall_lt_mono\"><span class=\"name\">Finset</span>.<span class=\"name\">Wolex</span>.<span class=\"name\">forall_lt_mono</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ± : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Init/Order/Defs.html#LinearOrder\">LinearOrder</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{s : <span class=\"fn\"><a href=\"./Mathlib/Data/Finset/Basic.html#Finset\">Finset</a> <span class=\"fn\">Œ±</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{t : <span class=\"fn\"><a href=\"./Mathlib/Data/Finset/Basic.html#Finset\">Finset</a> <span class=\"fn\">Œ±</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{a : <span class=\"fn\">Œ±</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h‚ÇÅ : <span class=\"fn\"><span class=\"fn\">‚Üë<span class=\"fn\">Finset.toWolex</span> <span class=\"fn\">s</span></span> <a href=\"./Init/Prelude.html#LE.le\">‚â§</a> <span class=\"fn\">‚Üë<span class=\"fn\">Finset.toWolex</span> <span class=\"fn\">t</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(h‚ÇÇ : <span class=\"fn\">‚àÄ (<span class=\"fn\">x</span> : <span class=\"fn\">Œ±</span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Membership.mem\">‚àà</a> <span class=\"fn\">t</span></span> ‚Üí <span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt</a> <span class=\"fn\">a</span></span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\">Œ±</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Membership.mem\">‚àà</a> <span class=\"fn\">s</span></span> ‚Üí <span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt</a> <span class=\"fn\">a</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/YaelDillies/LeanCamCombi/blob/41ed909d6e8b5e6b618db6412ed63ba09eba61c3//LeanCamCombi/Mathlib/Combinatorics/Colex.lean#L227-L228","name":"Finset.Wolex.singleton_le_singleton","line":227,"kind":"theorem","docLink":"./LeanCamCombi/Mathlib/Combinatorics/Colex.html#Finset.Wolex.singleton_le_singleton","doc":"Wolex is an extension of the base order. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./LeanCamCombi/Mathlib/Combinatorics/Colex.html#Finset.Wolex.singleton_le_singleton\"><span class=\"name\">Finset</span>.<span class=\"name\">Wolex</span>.<span class=\"name\">singleton_le_singleton</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ± : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Init/Order/Defs.html#LinearOrder\">LinearOrder</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{a : <span class=\"fn\">Œ±</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{b : <span class=\"fn\">Œ±</span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">‚Üë<span class=\"fn\">Finset.toWolex</span> <span class=\"fn\">{<span class=\"fn\">a</span>}</span></span> <a href=\"./Init/Prelude.html#LE.le\">‚â§</a> <span class=\"fn\">‚Üë<span class=\"fn\">Finset.toWolex</span> <span class=\"fn\">{<span class=\"fn\">b</span>}</span></span></span> <a href=\"./Init/Core.html#Iff\">‚Üî</a> <span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#LE.le\">‚â§</a> <span class=\"fn\">b</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/YaelDillies/LeanCamCombi/blob/41ed909d6e8b5e6b618db6412ed63ba09eba61c3//LeanCamCombi/Mathlib/Combinatorics/Colex.lean#L223-L224","name":"Finset.Wolex.singleton_lt_singleton","line":223,"kind":"theorem","docLink":"./LeanCamCombi/Mathlib/Combinatorics/Colex.html#Finset.Wolex.singleton_lt_singleton","doc":"Wolex is an extension of the base order. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./LeanCamCombi/Mathlib/Combinatorics/Colex.html#Finset.Wolex.singleton_lt_singleton\"><span class=\"name\">Finset</span>.<span class=\"name\">Wolex</span>.<span class=\"name\">singleton_lt_singleton</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ± : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Init/Order/Defs.html#LinearOrder\">LinearOrder</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{a : <span class=\"fn\">Œ±</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{b : <span class=\"fn\">Œ±</span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">‚Üë<span class=\"fn\">Finset.toWolex</span> <span class=\"fn\">{<span class=\"fn\">a</span>}</span></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt</a> <span class=\"fn\">‚Üë<span class=\"fn\">Finset.toWolex</span> <span class=\"fn\">{<span class=\"fn\">b</span>}</span></span></span> <a href=\"./Init/Core.html#Iff\">‚Üî</a> <span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt</a> <span class=\"fn\">b</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/YaelDillies/LeanCamCombi/blob/41ed909d6e8b5e6b618db6412ed63ba09eba61c3//LeanCamCombi/Mathlib/Combinatorics/Colex.lean#L219-L220","name":"Finset.Wolex.singleton_le_toWolex","line":219,"kind":"theorem","docLink":"./LeanCamCombi/Mathlib/Combinatorics/Colex.html#Finset.Wolex.singleton_le_toWolex","doc":"`{a} ‚â§ s` in wolex iff `r` contains an element greated than or equal to `a`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./LeanCamCombi/Mathlib/Combinatorics/Colex.html#Finset.Wolex.singleton_le_toWolex\"><span class=\"name\">Finset</span>.<span class=\"name\">Wolex</span>.<span class=\"name\">singleton_le_toWolex</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ± : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Init/Order/Defs.html#LinearOrder\">LinearOrder</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{s : <span class=\"fn\"><a href=\"./Mathlib/Data/Finset/Basic.html#Finset\">Finset</a> <span class=\"fn\">Œ±</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{a : <span class=\"fn\">Œ±</span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">‚Üë<span class=\"fn\">Finset.toWolex</span> <span class=\"fn\">{<span class=\"fn\">a</span>}</span></span> <a href=\"./Init/Prelude.html#LE.le\">‚â§</a> <span class=\"fn\">‚Üë<span class=\"fn\">Finset.toWolex</span> <span class=\"fn\">s</span></span></span> <a href=\"./Init/Core.html#Iff\">‚Üî</a> <span class=\"fn\">‚àÉ <span class=\"fn\">x</span>, <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Membership.mem\">‚àà</a> <span class=\"fn\">s</span></span> <a href=\"./Init/Prelude.html#And\">‚àß</a> <span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#LE.le\">‚â§</a> <span class=\"fn\">x</span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/YaelDillies/LeanCamCombi/blob/41ed909d6e8b5e6b618db6412ed63ba09eba61c3//LeanCamCombi/Mathlib/Combinatorics/Colex.lean#L210-L216","name":"Finset.Wolex.toWolex_lt_singleton","line":210,"kind":"theorem","docLink":"./LeanCamCombi/Mathlib/Combinatorics/Colex.html#Finset.Wolex.toWolex_lt_singleton","doc":"`s < {a}` in wolex iff all elements of `s` are strictly less than `a`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./LeanCamCombi/Mathlib/Combinatorics/Colex.html#Finset.Wolex.toWolex_lt_singleton\"><span class=\"name\">Finset</span>.<span class=\"name\">Wolex</span>.<span class=\"name\">toWolex_lt_singleton</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ± : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Init/Order/Defs.html#LinearOrder\">LinearOrder</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{s : <span class=\"fn\"><a href=\"./Mathlib/Data/Finset/Basic.html#Finset\">Finset</a> <span class=\"fn\">Œ±</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{a : <span class=\"fn\">Œ±</span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">‚Üë<span class=\"fn\">Finset.toWolex</span> <span class=\"fn\">s</span></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt</a> <span class=\"fn\">‚Üë<span class=\"fn\">Finset.toWolex</span> <span class=\"fn\">{<span class=\"fn\">a</span>}</span></span></span> <a href=\"./Init/Core.html#Iff\">‚Üî</a> <span class=\"fn\">‚àÄ (<span class=\"fn\">x</span> : <span class=\"fn\">Œ±</span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Membership.mem\">‚àà</a> <span class=\"fn\">s</span></span> ‚Üí <span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt</a> <span class=\"fn\">a</span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/YaelDillies/LeanCamCombi/blob/41ed909d6e8b5e6b618db6412ed63ba09eba61c3//LeanCamCombi/Mathlib/Combinatorics/Colex.lean#L207-L207","name":"Finset.Wolex.ofWolex_top","line":207,"kind":"theorem","docLink":"./LeanCamCombi/Mathlib/Combinatorics/Colex.html#Finset.Wolex.ofWolex_top","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./LeanCamCombi/Mathlib/Combinatorics/Colex.html#Finset.Wolex.ofWolex_top\"><span class=\"name\">Finset</span>.<span class=\"name\">Wolex</span>.<span class=\"name\">ofWolex_top</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ± : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Init/Order/Defs.html#LinearOrder\">LinearOrder</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/Fintype/Basic.html#Fintype\">Fintype</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">‚Üë<span class=\"fn\">Finset.ofWolex</span> <a href=\"./Mathlib/Order/BoundedOrder.html#Top.top\">‚ä§</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">Finset.univ</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/YaelDillies/LeanCamCombi/blob/41ed909d6e8b5e6b618db6412ed63ba09eba61c3//LeanCamCombi/Mathlib/Combinatorics/Colex.lean#L206-L206","name":"Finset.Wolex.toWolex_univ","line":206,"kind":"theorem","docLink":"./LeanCamCombi/Mathlib/Combinatorics/Colex.html#Finset.Wolex.toWolex_univ","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./LeanCamCombi/Mathlib/Combinatorics/Colex.html#Finset.Wolex.toWolex_univ\"><span class=\"name\">Finset</span>.<span class=\"name\">Wolex</span>.<span class=\"name\">toWolex_univ</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ± : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Init/Order/Defs.html#LinearOrder\">LinearOrder</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/Fintype/Basic.html#Fintype\">Fintype</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">‚Üë<span class=\"fn\">Finset.toWolex</span> <span class=\"fn\">Finset.univ</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Mathlib/Order/BoundedOrder.html#Top.top\">‚ä§</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/YaelDillies/LeanCamCombi/blob/41ed909d6e8b5e6b618db6412ed63ba09eba61c3//LeanCamCombi/Mathlib/Combinatorics/Colex.lean#L202-L204","name":"Finset.Wolex.instBoundedOrderWolexInstLEToLTToPreorderToPartialOrderToSemilatticeInfToLatticeInstDistribLattice","line":202,"kind":"instance","docLink":"./LeanCamCombi/Mathlib/Combinatorics/Colex.html#Finset.Wolex.instBoundedOrderWolexInstLEToLTToPreorderToPartialOrderToSemilatticeInfToLatticeInstDistribLattice","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./LeanCamCombi/Mathlib/Combinatorics/Colex.html#Finset.Wolex.instBoundedOrderWolexInstLEToLTToPreorderToPartialOrderToSemilatticeInfToLatticeInstDistribLattice\"><span class=\"name\">Finset</span>.<span class=\"name\">Wolex</span>.<span class=\"name\">instBoundedOrderWolexInstLEToLTToPreorderToPartialOrderToSemilatticeInfToLatticeInstDistribLattice</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ± : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Init/Order/Defs.html#LinearOrder\">LinearOrder</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/Fintype/Basic.html#Fintype\">Fintype</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/BoundedOrder.html#BoundedOrder\">BoundedOrder</a> (<span class=\"fn\"><a href=\"./LeanCamCombi/Mathlib/Combinatorics/Colex.html#Finset.Wolex\">Finset.Wolex</a> <span class=\"fn\">Œ±</span></span>)</span></div></div>"},{"info":{"sourceLink":"https://github.com/YaelDillies/LeanCamCombi/blob/41ed909d6e8b5e6b618db6412ed63ba09eba61c3//LeanCamCombi/Mathlib/Combinatorics/Colex.lean#L199-L200","name":"Finset.Wolex.wolex_le_of_subset","line":199,"kind":"theorem","docLink":"./LeanCamCombi/Mathlib/Combinatorics/Colex.html#Finset.Wolex.wolex_le_of_subset","doc":"If `s ‚äÜ t`, then `s ‚â§ t` in the wolex order. Note the converse does not hold, as `‚äÜ` is not a\nlinear order. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./LeanCamCombi/Mathlib/Combinatorics/Colex.html#Finset.Wolex.wolex_le_of_subset\"><span class=\"name\">Finset</span>.<span class=\"name\">Wolex</span>.<span class=\"name\">wolex_le_of_subset</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ± : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Init/Order/Defs.html#LinearOrder\">LinearOrder</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{s : <span class=\"fn\"><a href=\"./Mathlib/Data/Finset/Basic.html#Finset\">Finset</a> <span class=\"fn\">Œ±</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{t : <span class=\"fn\"><a href=\"./Mathlib/Data/Finset/Basic.html#Finset\">Finset</a> <span class=\"fn\">Œ±</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><span class=\"fn\">s</span> <a href=\"./Std/Classes/SetNotation.html#HasSubset.Subset\">‚äÜ</a> <span class=\"fn\">t</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">‚Üë<span class=\"fn\">Finset.toWolex</span> <span class=\"fn\">s</span></span> <a href=\"./Init/Prelude.html#LE.le\">‚â§</a> <span class=\"fn\">‚Üë<span class=\"fn\">Finset.toWolex</span> <span class=\"fn\">t</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/YaelDillies/LeanCamCombi/blob/41ed909d6e8b5e6b618db6412ed63ba09eba61c3//LeanCamCombi/Mathlib/Combinatorics/Colex.lean#L192-L195","name":"Finset.Wolex.wolex_lt_of_sSubset","line":192,"kind":"theorem","docLink":"./LeanCamCombi/Mathlib/Combinatorics/Colex.html#Finset.Wolex.wolex_lt_of_sSubset","doc":"If `s ‚äÇ t`, then `s` is less than `t` in the wolex order. Note the converse does not hold, as\n`‚äÜ` is not a linear order. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./LeanCamCombi/Mathlib/Combinatorics/Colex.html#Finset.Wolex.wolex_lt_of_sSubset\"><span class=\"name\">Finset</span>.<span class=\"name\">Wolex</span>.<span class=\"name\">wolex_lt_of_sSubset</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ± : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Init/Order/Defs.html#LinearOrder\">LinearOrder</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{s : <span class=\"fn\"><a href=\"./Mathlib/Data/Finset/Basic.html#Finset\">Finset</a> <span class=\"fn\">Œ±</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{t : <span class=\"fn\"><a href=\"./Mathlib/Data/Finset/Basic.html#Finset\">Finset</a> <span class=\"fn\">Œ±</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><span class=\"fn\">s</span> <a href=\"./Std/Classes/SetNotation.html#HasSSubset.SSubset\">‚äÇ</a> <span class=\"fn\">t</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">‚Üë<span class=\"fn\">Finset.toWolex</span> <span class=\"fn\">s</span></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt</a> <span class=\"fn\">‚Üë<span class=\"fn\">Finset.toWolex</span> <span class=\"fn\">t</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/YaelDillies/LeanCamCombi/blob/41ed909d6e8b5e6b618db6412ed63ba09eba61c3//LeanCamCombi/Mathlib/Combinatorics/Colex.lean#L186-L188","name":"Finset.Wolex.sdiff_le_sdiff_iff_le","line":186,"kind":"theorem","docLink":"./LeanCamCombi/Mathlib/Combinatorics/Colex.html#Finset.Wolex.sdiff_le_sdiff_iff_le","doc":"Wolex doesn't care if you remove the other set "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./LeanCamCombi/Mathlib/Combinatorics/Colex.html#Finset.Wolex.sdiff_le_sdiff_iff_le\"><span class=\"name\">Finset</span>.<span class=\"name\">Wolex</span>.<span class=\"name\">sdiff_le_sdiff_iff_le</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ± : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Init/Order/Defs.html#LinearOrder\">LinearOrder</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(s : <span class=\"fn\"><a href=\"./Mathlib/Data/Finset/Basic.html#Finset\">Finset</a> <span class=\"fn\">Œ±</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(t : <span class=\"fn\"><a href=\"./Mathlib/Data/Finset/Basic.html#Finset\">Finset</a> <span class=\"fn\">Œ±</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">‚Üë<span class=\"fn\">Finset.toWolex</span> (<span class=\"fn\"><span class=\"fn\">s</span> <a href=\"./Std/Classes/SetNotation.html#SDiff.sdiff\">\\</a> <span class=\"fn\">t</span></span>)</span> <a href=\"./Init/Prelude.html#LE.le\">‚â§</a> <span class=\"fn\">‚Üë<span class=\"fn\">Finset.toWolex</span> (<span class=\"fn\"><span class=\"fn\">t</span> <a href=\"./Std/Classes/SetNotation.html#SDiff.sdiff\">\\</a> <span class=\"fn\">s</span></span>)</span></span> <a href=\"./Init/Core.html#Iff\">‚Üî</a> <span class=\"fn\"><span class=\"fn\">‚Üë<span class=\"fn\">Finset.toWolex</span> <span class=\"fn\">s</span></span> <a href=\"./Init/Prelude.html#LE.le\">‚â§</a> <span class=\"fn\">‚Üë<span class=\"fn\">Finset.toWolex</span> <span class=\"fn\">t</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/YaelDillies/LeanCamCombi/blob/41ed909d6e8b5e6b618db6412ed63ba09eba61c3//LeanCamCombi/Mathlib/Combinatorics/Colex.lean#L174-L182","name":"Finset.Wolex.instOrderBot","line":174,"kind":"instance","docLink":"./LeanCamCombi/Mathlib/Combinatorics/Colex.html#Finset.Wolex.instOrderBot","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./LeanCamCombi/Mathlib/Combinatorics/Colex.html#Finset.Wolex.instOrderBot\"><span class=\"name\">Finset</span>.<span class=\"name\">Wolex</span>.<span class=\"name\">instOrderBot</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ± : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Init/Order/Defs.html#LinearOrder\">LinearOrder</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/BoundedOrder.html#OrderBot\">OrderBot</a> (<span class=\"fn\"><a href=\"./LeanCamCombi/Mathlib/Combinatorics/Colex.html#Finset.Wolex\">Finset.Wolex</a> <span class=\"fn\">Œ±</span></span>)</span></div></div>"},{"info":{"sourceLink":"https://github.com/YaelDillies/LeanCamCombi/blob/41ed909d6e8b5e6b618db6412ed63ba09eba61c3//LeanCamCombi/Mathlib/Combinatorics/Colex.lean#L172-L172","name":"Finset.Wolex.ofWolex_bot","line":172,"kind":"theorem","docLink":"./LeanCamCombi/Mathlib/Combinatorics/Colex.html#Finset.Wolex.ofWolex_bot","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./LeanCamCombi/Mathlib/Combinatorics/Colex.html#Finset.Wolex.ofWolex_bot\"><span class=\"name\">Finset</span>.<span class=\"name\">Wolex</span>.<span class=\"name\">ofWolex_bot</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ± : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">‚Üë<span class=\"fn\">Finset.ofWolex</span> <a href=\"./Mathlib/Order/BoundedOrder.html#Bot.bot\">‚ä•</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Core.html#EmptyCollection.emptyCollection\">‚àÖ</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/YaelDillies/LeanCamCombi/blob/41ed909d6e8b5e6b618db6412ed63ba09eba61c3//LeanCamCombi/Mathlib/Combinatorics/Colex.lean#L171-L171","name":"Finset.Wolex.toWolex_empty","line":171,"kind":"theorem","docLink":"./LeanCamCombi/Mathlib/Combinatorics/Colex.html#Finset.Wolex.toWolex_empty","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./LeanCamCombi/Mathlib/Combinatorics/Colex.html#Finset.Wolex.toWolex_empty\"><span class=\"name\">Finset</span>.<span class=\"name\">Wolex</span>.<span class=\"name\">toWolex_empty</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ± : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">‚Üë<span class=\"fn\">Finset.toWolex</span> <a href=\"./Init/Core.html#EmptyCollection.emptyCollection\">‚àÖ</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Mathlib/Order/BoundedOrder.html#Bot.bot\">‚ä•</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/YaelDillies/LeanCamCombi/blob/41ed909d6e8b5e6b618db6412ed63ba09eba61c3//LeanCamCombi/Mathlib/Combinatorics/Colex.lean#L168-L169","name":"Finset.Wolex.instBot","line":168,"kind":"instance","docLink":"./LeanCamCombi/Mathlib/Combinatorics/Colex.html#Finset.Wolex.instBot","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./LeanCamCombi/Mathlib/Combinatorics/Colex.html#Finset.Wolex.instBot\"><span class=\"name\">Finset</span>.<span class=\"name\">Wolex</span>.<span class=\"name\">instBot</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ± : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/BoundedOrder.html#Bot\">Bot</a> (<span class=\"fn\"><a href=\"./LeanCamCombi/Mathlib/Combinatorics/Colex.html#Finset.Wolex\">Finset.Wolex</a> <span class=\"fn\">Œ±</span></span>)</span></div></div>"},{"info":{"sourceLink":"https://github.com/YaelDillies/LeanCamCombi/blob/41ed909d6e8b5e6b618db6412ed63ba09eba61c3//LeanCamCombi/Mathlib/Combinatorics/Colex.lean#L166-L166","name":"Finset.Wolex.instLinearOrder","line":166,"kind":"instance","docLink":"./LeanCamCombi/Mathlib/Combinatorics/Colex.html#Finset.Wolex.instLinearOrder","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./LeanCamCombi/Mathlib/Combinatorics/Colex.html#Finset.Wolex.instLinearOrder\"><span class=\"name\">Finset</span>.<span class=\"name\">Wolex</span>.<span class=\"name\">instLinearOrder</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ± : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Init/Order/Defs.html#LinearOrder\">LinearOrder</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Init/Order/Defs.html#LinearOrder\">LinearOrder</a> (<span class=\"fn\"><a href=\"./LeanCamCombi/Mathlib/Combinatorics/Colex.html#Finset.Wolex\">Finset.Wolex</a> <span class=\"fn\">Œ±</span></span>)</span></div></div>"},{"info":{"sourceLink":"https://github.com/YaelDillies/LeanCamCombi/blob/41ed909d6e8b5e6b618db6412ed63ba09eba61c3//LeanCamCombi/Mathlib/Combinatorics/Colex.lean#L158-L164","name":"Finset.Wolex.instDecidableLT","line":158,"kind":"instance","docLink":"./LeanCamCombi/Mathlib/Combinatorics/Colex.html#Finset.Wolex.instDecidableLT","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./LeanCamCombi/Mathlib/Combinatorics/Colex.html#Finset.Wolex.instDecidableLT\"><span class=\"name\">Finset</span>.<span class=\"name\">Wolex</span>.<span class=\"name\">instDecidableLT</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ± : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Init/Order/Defs.html#LinearOrder\">LinearOrder</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableRel\">DecidableRel</a> <span class=\"fn\">fun <span class=\"fn\">x</span> <span class=\"fn\">x_1</span> =&gt <span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt</a> <span class=\"fn\">x_1</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/YaelDillies/LeanCamCombi/blob/41ed909d6e8b5e6b618db6412ed63ba09eba61c3//LeanCamCombi/Mathlib/Combinatorics/Colex.lean#L137-L156","name":"Finset.Wolex.instIsStrictTotalOrderWolexLtInstLTToLTToPreorderToPartialOrderToSemilatticeInfToLatticeInstDistribLattice","line":137,"kind":"instance","docLink":"./LeanCamCombi/Mathlib/Combinatorics/Colex.html#Finset.Wolex.instIsStrictTotalOrderWolexLtInstLTToLTToPreorderToPartialOrderToSemilatticeInfToLatticeInstDistribLattice","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./LeanCamCombi/Mathlib/Combinatorics/Colex.html#Finset.Wolex.instIsStrictTotalOrderWolexLtInstLTToLTToPreorderToPartialOrderToSemilatticeInfToLatticeInstDistribLattice\"><span class=\"name\">Finset</span>.<span class=\"name\">Wolex</span>.<span class=\"name\">instIsStrictTotalOrderWolexLtInstLTToLTToPreorderToPartialOrderToSemilatticeInfToLatticeInstDistribLattice</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ± : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Init/Order/Defs.html#LinearOrder\">LinearOrder</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Init/Algebra/Classes.html#IsStrictTotalOrder\">IsStrictTotalOrder</a> (<span class=\"fn\"><a href=\"./LeanCamCombi/Mathlib/Combinatorics/Colex.html#Finset.Wolex\">Finset.Wolex</a> <span class=\"fn\">Œ±</span></span>) <span class=\"fn\">fun <span class=\"fn\">x</span> <span class=\"fn\">x_1</span> =&gt <span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt</a> <span class=\"fn\">x_1</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/YaelDillies/LeanCamCombi/blob/41ed909d6e8b5e6b618db6412ed63ba09eba61c3//LeanCamCombi/Mathlib/Combinatorics/Colex.lean#L116-L128","name":"Finset.Wolex.sdiff_lt_sdiff_iff_lt","line":116,"kind":"theorem","docLink":"./LeanCamCombi/Mathlib/Combinatorics/Colex.html#Finset.Wolex.sdiff_lt_sdiff_iff_lt","doc":"Wolex doesn't care if you remove the other set "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./LeanCamCombi/Mathlib/Combinatorics/Colex.html#Finset.Wolex.sdiff_lt_sdiff_iff_lt\"><span class=\"name\">Finset</span>.<span class=\"name\">Wolex</span>.<span class=\"name\">sdiff_lt_sdiff_iff_lt</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ± : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#LT\">LT</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(s : <span class=\"fn\"><a href=\"./Mathlib/Data/Finset/Basic.html#Finset\">Finset</a> <span class=\"fn\">Œ±</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(t : <span class=\"fn\"><a href=\"./Mathlib/Data/Finset/Basic.html#Finset\">Finset</a> <span class=\"fn\">Œ±</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">‚Üë<span class=\"fn\">Finset.toWolex</span> (<span class=\"fn\"><span class=\"fn\">s</span> <a href=\"./Std/Classes/SetNotation.html#SDiff.sdiff\">\\</a> <span class=\"fn\">t</span></span>)</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt</a> <span class=\"fn\">‚Üë<span class=\"fn\">Finset.toWolex</span> (<span class=\"fn\"><span class=\"fn\">t</span> <a href=\"./Std/Classes/SetNotation.html#SDiff.sdiff\">\\</a> <span class=\"fn\">s</span></span>)</span></span> <a href=\"./Init/Core.html#Iff\">‚Üî</a> <span class=\"fn\"><span class=\"fn\">‚Üë<span class=\"fn\">Finset.toWolex</span> <span class=\"fn\">s</span></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt</a> <span class=\"fn\">‚Üë<span class=\"fn\">Finset.toWolex</span> <span class=\"fn\">t</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/YaelDillies/LeanCamCombi/blob/41ed909d6e8b5e6b618db6412ed63ba09eba61c3//LeanCamCombi/Mathlib/Combinatorics/Colex.lean#L112-L112","name":"Finset.Wolex.instIsIrrefl","line":112,"kind":"instance","docLink":"./LeanCamCombi/Mathlib/Combinatorics/Colex.html#Finset.Wolex.instIsIrrefl","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./LeanCamCombi/Mathlib/Combinatorics/Colex.html#Finset.Wolex.instIsIrrefl\"><span class=\"name\">Finset</span>.<span class=\"name\">Wolex</span>.<span class=\"name\">instIsIrrefl</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ± : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#LT\">LT</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Init/Algebra/Classes.html#IsIrrefl\">IsIrrefl</a> (<span class=\"fn\"><a href=\"./LeanCamCombi/Mathlib/Combinatorics/Colex.html#Finset.Wolex\">Finset.Wolex</a> <span class=\"fn\">Œ±</span></span>) <span class=\"fn\">fun <span class=\"fn\">x</span> <span class=\"fn\">x_1</span> =&gt <span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt</a> <span class=\"fn\">x_1</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/YaelDillies/LeanCamCombi/blob/41ed909d6e8b5e6b618db6412ed63ba09eba61c3//LeanCamCombi/Mathlib/Combinatorics/Colex.lean#L108-L110","name":"Finset.Wolex.toWolex_le_toWolex","line":108,"kind":"theorem","docLink":"./LeanCamCombi/Mathlib/Combinatorics/Colex.html#Finset.Wolex.toWolex_le_toWolex","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./LeanCamCombi/Mathlib/Combinatorics/Colex.html#Finset.Wolex.toWolex_le_toWolex\"><span class=\"name\">Finset</span>.<span class=\"name\">Wolex</span>.<span class=\"name\">toWolex_le_toWolex</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ± : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#LT\">LT</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{s : <span class=\"fn\"><a href=\"./Mathlib/Data/Finset/Basic.html#Finset\">Finset</a> <span class=\"fn\">Œ±</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{t : <span class=\"fn\"><a href=\"./Mathlib/Data/Finset/Basic.html#Finset\">Finset</a> <span class=\"fn\">Œ±</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">‚Üë<span class=\"fn\">Finset.toWolex</span> <span class=\"fn\">s</span></span> <a href=\"./Init/Prelude.html#LE.le\">‚â§</a> <span class=\"fn\">‚Üë<span class=\"fn\">Finset.toWolex</span> <span class=\"fn\">t</span></span></span> <a href=\"./Init/Core.html#Iff\">‚Üî</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">s</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">t</span></span> <a href=\"./Init/Prelude.html#Or\">‚à®</a> <span class=\"fn\">‚àÉ <span class=\"fn\">k</span>, <span class=\"fn\">(<span class=\"fn\">‚àÄ ‚¶É<span class=\"fn\">x</span> : <span class=\"fn\">Œ±</span>‚¶Ñ, <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">k</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt</a> <span class=\"fn\">x</span></span> ‚Üí (<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Membership.mem\">‚àà</a> <span class=\"fn\">s</span></span> <a href=\"./Init/Core.html#Iff\">‚Üî</a> <span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Membership.mem\">‚àà</a> <span class=\"fn\">t</span></span></span>)</span></span>) <a href=\"./Init/Prelude.html#And\">‚àß</a> <span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Not\">¬¨</a><span class=\"fn\"><span class=\"fn\">k</span> <a href=\"./Init/Prelude.html#Membership.mem\">‚àà</a> <span class=\"fn\">s</span></span></span> <a href=\"./Init/Prelude.html#And\">‚àß</a> <span class=\"fn\"><span class=\"fn\">k</span> <a href=\"./Init/Prelude.html#Membership.mem\">‚àà</a> <span class=\"fn\">t</span></span></span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/YaelDillies/LeanCamCombi/blob/41ed909d6e8b5e6b618db6412ed63ba09eba61c3//LeanCamCombi/Mathlib/Combinatorics/Colex.lean#L105-L106","name":"Finset.Wolex.toWolex_lt_toWolex","line":105,"kind":"theorem","docLink":"./LeanCamCombi/Mathlib/Combinatorics/Colex.html#Finset.Wolex.toWolex_lt_toWolex","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./LeanCamCombi/Mathlib/Combinatorics/Colex.html#Finset.Wolex.toWolex_lt_toWolex\"><span class=\"name\">Finset</span>.<span class=\"name\">Wolex</span>.<span class=\"name\">toWolex_lt_toWolex</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ± : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#LT\">LT</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{s : <span class=\"fn\"><a href=\"./Mathlib/Data/Finset/Basic.html#Finset\">Finset</a> <span class=\"fn\">Œ±</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{t : <span class=\"fn\"><a href=\"./Mathlib/Data/Finset/Basic.html#Finset\">Finset</a> <span class=\"fn\">Œ±</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">‚Üë<span class=\"fn\">Finset.toWolex</span> <span class=\"fn\">s</span></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt</a> <span class=\"fn\">‚Üë<span class=\"fn\">Finset.toWolex</span> <span class=\"fn\">t</span></span></span> <a href=\"./Init/Core.html#Iff\">‚Üî</a> <span class=\"fn\">‚àÉ <span class=\"fn\">k</span>, <span class=\"fn\">(<span class=\"fn\">‚àÄ ‚¶É<span class=\"fn\">x</span> : <span class=\"fn\">Œ±</span>‚¶Ñ, <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">k</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt</a> <span class=\"fn\">x</span></span> ‚Üí (<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Membership.mem\">‚àà</a> <span class=\"fn\">s</span></span> <a href=\"./Init/Core.html#Iff\">‚Üî</a> <span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Membership.mem\">‚àà</a> <span class=\"fn\">t</span></span></span>)</span></span>) <a href=\"./Init/Prelude.html#And\">‚àß</a> <span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Not\">¬¨</a><span class=\"fn\"><span class=\"fn\">k</span> <a href=\"./Init/Prelude.html#Membership.mem\">‚àà</a> <span class=\"fn\">s</span></span></span> <a href=\"./Init/Prelude.html#And\">‚àß</a> <span class=\"fn\"><span class=\"fn\">k</span> <a href=\"./Init/Prelude.html#Membership.mem\">‚àà</a> <span class=\"fn\">t</span></span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/YaelDillies/LeanCamCombi/blob/41ed909d6e8b5e6b618db6412ed63ba09eba61c3//LeanCamCombi/Mathlib/Combinatorics/Colex.lean#L100-L103","name":"Finset.Wolex.le_def","line":100,"kind":"theorem","docLink":"./LeanCamCombi/Mathlib/Combinatorics/Colex.html#Finset.Wolex.le_def","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./LeanCamCombi/Mathlib/Combinatorics/Colex.html#Finset.Wolex.le_def\"><span class=\"name\">Finset</span>.<span class=\"name\">Wolex</span>.<span class=\"name\">le_def</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ± : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#LT\">LT</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{s : <span class=\"fn\"><a href=\"./LeanCamCombi/Mathlib/Combinatorics/Colex.html#Finset.Wolex\">Finset.Wolex</a> <span class=\"fn\">Œ±</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{t : <span class=\"fn\"><a href=\"./LeanCamCombi/Mathlib/Combinatorics/Colex.html#Finset.Wolex\">Finset.Wolex</a> <span class=\"fn\">Œ±</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">s</span> <a href=\"./Init/Prelude.html#LE.le\">‚â§</a> <span class=\"fn\">t</span></span> <a href=\"./Init/Core.html#Iff\">‚Üî</a>   <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">s</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">t</span></span> <a href=\"./Init/Prelude.html#Or\">‚à®</a>     <span class=\"fn\">‚àÉ <span class=\"fn\">a</span>,\n      <span class=\"fn\">(<span class=\"fn\">‚àÄ ‚¶É<span class=\"fn\">x</span> : <span class=\"fn\">Œ±</span>‚¶Ñ, <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt</a> <span class=\"fn\">x</span></span> ‚Üí (<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Membership.mem\">‚àà</a> <span class=\"fn\">‚Üë<span class=\"fn\">Finset.ofWolex</span> <span class=\"fn\">s</span></span></span> <a href=\"./Init/Core.html#Iff\">‚Üî</a> <span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Membership.mem\">‚àà</a> <span class=\"fn\">‚Üë<span class=\"fn\">Finset.ofWolex</span> <span class=\"fn\">t</span></span></span></span>)</span></span>) <a href=\"./Init/Prelude.html#And\">‚àß</a>         <span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Not\">¬¨</a><span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#Membership.mem\">‚àà</a> <span class=\"fn\">‚Üë<span class=\"fn\">Finset.ofWolex</span> <span class=\"fn\">s</span></span></span></span> <a href=\"./Init/Prelude.html#And\">‚àß</a> <span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#Membership.mem\">‚àà</a> <span class=\"fn\">‚Üë<span class=\"fn\">Finset.ofWolex</span> <span class=\"fn\">t</span></span></span></span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/YaelDillies/LeanCamCombi/blob/41ed909d6e8b5e6b618db6412ed63ba09eba61c3//LeanCamCombi/Mathlib/Combinatorics/Colex.lean#L96-L98","name":"Finset.Wolex.lt_def","line":96,"kind":"theorem","docLink":"./LeanCamCombi/Mathlib/Combinatorics/Colex.html#Finset.Wolex.lt_def","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./LeanCamCombi/Mathlib/Combinatorics/Colex.html#Finset.Wolex.lt_def\"><span class=\"name\">Finset</span>.<span class=\"name\">Wolex</span>.<span class=\"name\">lt_def</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ± : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#LT\">LT</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{s : <span class=\"fn\"><a href=\"./LeanCamCombi/Mathlib/Combinatorics/Colex.html#Finset.Wolex\">Finset.Wolex</a> <span class=\"fn\">Œ±</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{t : <span class=\"fn\"><a href=\"./LeanCamCombi/Mathlib/Combinatorics/Colex.html#Finset.Wolex\">Finset.Wolex</a> <span class=\"fn\">Œ±</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">s</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt</a> <span class=\"fn\">t</span></span> <a href=\"./Init/Core.html#Iff\">‚Üî</a>   <span class=\"fn\">‚àÉ <span class=\"fn\">a</span>,\n    <span class=\"fn\">(<span class=\"fn\">‚àÄ ‚¶É<span class=\"fn\">x</span> : <span class=\"fn\">Œ±</span>‚¶Ñ, <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt</a> <span class=\"fn\">x</span></span> ‚Üí (<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Membership.mem\">‚àà</a> <span class=\"fn\">‚Üë<span class=\"fn\">Finset.ofWolex</span> <span class=\"fn\">s</span></span></span> <a href=\"./Init/Core.html#Iff\">‚Üî</a> <span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Membership.mem\">‚àà</a> <span class=\"fn\">‚Üë<span class=\"fn\">Finset.ofWolex</span> <span class=\"fn\">t</span></span></span></span>)</span></span>) <a href=\"./Init/Prelude.html#And\">‚àß</a>       <span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Not\">¬¨</a><span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#Membership.mem\">‚àà</a> <span class=\"fn\">‚Üë<span class=\"fn\">Finset.ofWolex</span> <span class=\"fn\">s</span></span></span></span> <a href=\"./Init/Prelude.html#And\">‚àß</a> <span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#Membership.mem\">‚àà</a> <span class=\"fn\">‚Üë<span class=\"fn\">Finset.ofWolex</span> <span class=\"fn\">t</span></span></span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/YaelDillies/LeanCamCombi/blob/41ed909d6e8b5e6b618db6412ed63ba09eba61c3//LeanCamCombi/Mathlib/Combinatorics/Colex.lean#L94-L94","name":"Finset.Wolex.instLE","line":94,"kind":"instance","docLink":"./LeanCamCombi/Mathlib/Combinatorics/Colex.html#Finset.Wolex.instLE","doc":"We can define (‚â§) in the obvious way. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./LeanCamCombi/Mathlib/Combinatorics/Colex.html#Finset.Wolex.instLE\"><span class=\"name\">Finset</span>.<span class=\"name\">Wolex</span>.<span class=\"name\">instLE</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ± : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#LT\">LT</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#LE\">LE</a> (<span class=\"fn\"><a href=\"./LeanCamCombi/Mathlib/Combinatorics/Colex.html#Finset.Wolex\">Finset.Wolex</a> <span class=\"fn\">Œ±</span></span>)</span></div></div>"},{"info":{"sourceLink":"https://github.com/YaelDillies/LeanCamCombi/blob/41ed909d6e8b5e6b618db6412ed63ba09eba61c3//LeanCamCombi/Mathlib/Combinatorics/Colex.lean#L90-L91","name":"Finset.Wolex.instLT","line":90,"kind":"instance","docLink":"./LeanCamCombi/Mathlib/Combinatorics/Colex.html#Finset.Wolex.instLT","doc":"`s` is less than `t` in the wolex ordering if the largest thing that's not in both sets is in t.\nIn other words, `max (s ‚àÜ t) ‚àà t` (if the maximum exists). "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./LeanCamCombi/Mathlib/Combinatorics/Colex.html#Finset.Wolex.instLT\"><span class=\"name\">Finset</span>.<span class=\"name\">Wolex</span>.<span class=\"name\">instLT</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ± : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#LT\">LT</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#LT\">LT</a> (<span class=\"fn\"><a href=\"./LeanCamCombi/Mathlib/Combinatorics/Colex.html#Finset.Wolex\">Finset.Wolex</a> <span class=\"fn\">Œ±</span></span>)</span></div></div>"},{"info":{"sourceLink":"https://github.com/YaelDillies/LeanCamCombi/blob/41ed909d6e8b5e6b618db6412ed63ba09eba61c3//LeanCamCombi/Mathlib/Combinatorics/Colex.lean#L82-L82","name":"Finset.Wolex.rec","line":82,"kind":"def","docLink":"./LeanCamCombi/Mathlib/Combinatorics/Colex.html#Finset.Wolex.rec","doc":"Recursor for `Wolex Œ±`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./LeanCamCombi/Mathlib/Combinatorics/Colex.html#Finset.Wolex.rec\"><span class=\"name\">Finset</span>.<span class=\"name\">Wolex</span>.<span class=\"name\">rec</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ± : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <span class=\"fn\"><span class=\"fn\"><a href=\"./LeanCamCombi/Mathlib/Combinatorics/Colex.html#Finset.Wolex\">Finset.Wolex</a> <span class=\"fn\">Œ±</span></span> ‚Üí <a href=\"./foundational_types.html\">Sort</a> u_3</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\">(<span class=\"fn\">s</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Finset/Basic.html#Finset\">Finset</a> <span class=\"fn\">Œ±</span></span>) ‚Üí <span class=\"fn\"><span class=\"fn\">C</span> (<span class=\"fn\">‚Üë<span class=\"fn\">Finset.toWolex</span> <span class=\"fn\">s</span></span>)</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(s : <span class=\"fn\"><a href=\"./LeanCamCombi/Mathlib/Combinatorics/Colex.html#Finset.Wolex\">Finset.Wolex</a> <span class=\"fn\">Œ±</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">C</span> <span class=\"fn\">s</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/YaelDillies/LeanCamCombi/blob/41ed909d6e8b5e6b618db6412ed63ba09eba61c3//LeanCamCombi/Mathlib/Combinatorics/Colex.lean#L78-L78","name":"Finset.ofWolex_ne_ofWolex","line":78,"kind":"theorem","docLink":"./LeanCamCombi/Mathlib/Combinatorics/Colex.html#Finset.ofWolex_ne_ofWolex","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./LeanCamCombi/Mathlib/Combinatorics/Colex.html#Finset.ofWolex_ne_ofWolex\"><span class=\"name\">Finset</span>.<span class=\"name\">ofWolex_ne_ofWolex</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ± : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{s : <span class=\"fn\"><a href=\"./LeanCamCombi/Mathlib/Combinatorics/Colex.html#Finset.Wolex\">Finset.Wolex</a> <span class=\"fn\">Œ±</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{t : <span class=\"fn\"><a href=\"./LeanCamCombi/Mathlib/Combinatorics/Colex.html#Finset.Wolex\">Finset.Wolex</a> <span class=\"fn\">Œ±</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">‚Üë<span class=\"fn\">Finset.ofWolex</span> <span class=\"fn\">s</span></span> <a href=\"./Init/Core.html#Ne\">‚â†</a> <span class=\"fn\">‚Üë<span class=\"fn\">Finset.ofWolex</span> <span class=\"fn\">t</span></span></span> <a href=\"./Init/Core.html#Iff\">‚Üî</a> <span class=\"fn\"><span class=\"fn\">s</span> <a href=\"./Init/Core.html#Ne\">‚â†</a> <span class=\"fn\">t</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/YaelDillies/LeanCamCombi/blob/41ed909d6e8b5e6b618db6412ed63ba09eba61c3//LeanCamCombi/Mathlib/Combinatorics/Colex.lean#L77-L77","name":"Finset.toWolex_ne_toWolex","line":77,"kind":"theorem","docLink":"./LeanCamCombi/Mathlib/Combinatorics/Colex.html#Finset.toWolex_ne_toWolex","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./LeanCamCombi/Mathlib/Combinatorics/Colex.html#Finset.toWolex_ne_toWolex\"><span class=\"name\">Finset</span>.<span class=\"name\">toWolex_ne_toWolex</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ± : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{s : <span class=\"fn\"><a href=\"./Mathlib/Data/Finset/Basic.html#Finset\">Finset</a> <span class=\"fn\">Œ±</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{t : <span class=\"fn\"><a href=\"./Mathlib/Data/Finset/Basic.html#Finset\">Finset</a> <span class=\"fn\">Œ±</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">‚Üë<span class=\"fn\">Finset.toWolex</span> <span class=\"fn\">s</span></span> <a href=\"./Init/Core.html#Ne\">‚â†</a> <span class=\"fn\">‚Üë<span class=\"fn\">Finset.toWolex</span> <span class=\"fn\">t</span></span></span> <a href=\"./Init/Core.html#Iff\">‚Üî</a> <span class=\"fn\"><span class=\"fn\">s</span> <a href=\"./Init/Core.html#Ne\">‚â†</a> <span class=\"fn\">t</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/YaelDillies/LeanCamCombi/blob/41ed909d6e8b5e6b618db6412ed63ba09eba61c3//LeanCamCombi/Mathlib/Combinatorics/Colex.lean#L76-L76","name":"Finset.ofWolex_inj","line":76,"kind":"theorem","docLink":"./LeanCamCombi/Mathlib/Combinatorics/Colex.html#Finset.ofWolex_inj","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./LeanCamCombi/Mathlib/Combinatorics/Colex.html#Finset.ofWolex_inj\"><span class=\"name\">Finset</span>.<span class=\"name\">ofWolex_inj</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ± : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{s : <span class=\"fn\"><a href=\"./LeanCamCombi/Mathlib/Combinatorics/Colex.html#Finset.Wolex\">Finset.Wolex</a> <span class=\"fn\">Œ±</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{t : <span class=\"fn\"><a href=\"./LeanCamCombi/Mathlib/Combinatorics/Colex.html#Finset.Wolex\">Finset.Wolex</a> <span class=\"fn\">Œ±</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">‚Üë<span class=\"fn\">Finset.ofWolex</span> <span class=\"fn\">s</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">‚Üë<span class=\"fn\">Finset.ofWolex</span> <span class=\"fn\">t</span></span></span> <a href=\"./Init/Core.html#Iff\">‚Üî</a> <span class=\"fn\"><span class=\"fn\">s</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">t</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/YaelDillies/LeanCamCombi/blob/41ed909d6e8b5e6b618db6412ed63ba09eba61c3//LeanCamCombi/Mathlib/Combinatorics/Colex.lean#L75-L75","name":"Finset.toWolex_inj","line":75,"kind":"theorem","docLink":"./LeanCamCombi/Mathlib/Combinatorics/Colex.html#Finset.toWolex_inj","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./LeanCamCombi/Mathlib/Combinatorics/Colex.html#Finset.toWolex_inj\"><span class=\"name\">Finset</span>.<span class=\"name\">toWolex_inj</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ± : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{s : <span class=\"fn\"><a href=\"./Mathlib/Data/Finset/Basic.html#Finset\">Finset</a> <span class=\"fn\">Œ±</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{t : <span class=\"fn\"><a href=\"./Mathlib/Data/Finset/Basic.html#Finset\">Finset</a> <span class=\"fn\">Œ±</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">‚Üë<span class=\"fn\">Finset.toWolex</span> <span class=\"fn\">s</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">‚Üë<span class=\"fn\">Finset.toWolex</span> <span class=\"fn\">t</span></span></span> <a href=\"./Init/Core.html#Iff\">‚Üî</a> <span class=\"fn\"><span class=\"fn\">s</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">t</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/YaelDillies/LeanCamCombi/blob/41ed909d6e8b5e6b618db6412ed63ba09eba61c3//LeanCamCombi/Mathlib/Combinatorics/Colex.lean#L73-L73","name":"Finset.ofWolex_toWolex","line":73,"kind":"theorem","docLink":"./LeanCamCombi/Mathlib/Combinatorics/Colex.html#Finset.ofWolex_toWolex","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./LeanCamCombi/Mathlib/Combinatorics/Colex.html#Finset.ofWolex_toWolex\"><span class=\"name\">Finset</span>.<span class=\"name\">ofWolex_toWolex</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ± : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(s : <span class=\"fn\"><a href=\"./Mathlib/Data/Finset/Basic.html#Finset\">Finset</a> <span class=\"fn\">Œ±</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">‚Üë<span class=\"fn\">Finset.ofWolex</span> (<span class=\"fn\">‚Üë<span class=\"fn\">Finset.toWolex</span> <span class=\"fn\">s</span></span>)</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">s</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/YaelDillies/LeanCamCombi/blob/41ed909d6e8b5e6b618db6412ed63ba09eba61c3//LeanCamCombi/Mathlib/Combinatorics/Colex.lean#L72-L72","name":"Finset.toWolex_ofWolex","line":72,"kind":"theorem","docLink":"./LeanCamCombi/Mathlib/Combinatorics/Colex.html#Finset.toWolex_ofWolex","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./LeanCamCombi/Mathlib/Combinatorics/Colex.html#Finset.toWolex_ofWolex\"><span class=\"name\">Finset</span>.<span class=\"name\">toWolex_ofWolex</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ± : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(s : <span class=\"fn\"><a href=\"./LeanCamCombi/Mathlib/Combinatorics/Colex.html#Finset.Wolex\">Finset.Wolex</a> <span class=\"fn\">Œ±</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">‚Üë<span class=\"fn\">Finset.toWolex</span> (<span class=\"fn\">‚Üë<span class=\"fn\">Finset.ofWolex</span> <span class=\"fn\">s</span></span>)</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">s</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/YaelDillies/LeanCamCombi/blob/41ed909d6e8b5e6b618db6412ed63ba09eba61c3//LeanCamCombi/Mathlib/Combinatorics/Colex.lean#L71-L71","name":"Finset.ofWolex_symm_eq","line":71,"kind":"theorem","docLink":"./LeanCamCombi/Mathlib/Combinatorics/Colex.html#Finset.ofWolex_symm_eq","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./LeanCamCombi/Mathlib/Combinatorics/Colex.html#Finset.ofWolex_symm_eq\"><span class=\"name\">Finset</span>.<span class=\"name\">ofWolex_symm_eq</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ± : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">Finset.ofWolex</span>.symm</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">Finset.toWolex</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/YaelDillies/LeanCamCombi/blob/41ed909d6e8b5e6b618db6412ed63ba09eba61c3//LeanCamCombi/Mathlib/Combinatorics/Colex.lean#L70-L70","name":"Finset.toWolex_symm_eq","line":70,"kind":"theorem","docLink":"./LeanCamCombi/Mathlib/Combinatorics/Colex.html#Finset.toWolex_symm_eq","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./LeanCamCombi/Mathlib/Combinatorics/Colex.html#Finset.toWolex_symm_eq\"><span class=\"name\">Finset</span>.<span class=\"name\">toWolex_symm_eq</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ± : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">Finset.toWolex</span>.symm</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">Finset.ofWolex</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/YaelDillies/LeanCamCombi/blob/41ed909d6e8b5e6b618db6412ed63ba09eba61c3//LeanCamCombi/Mathlib/Combinatorics/Colex.lean#L68-L68","name":"Finset.ofWolex","line":68,"kind":"def","docLink":"./LeanCamCombi/Mathlib/Combinatorics/Colex.html#Finset.ofWolex","doc":"`ofWolex` is the \"identity\" function between `Finset.Wolex Œ±` and `Finset Œ±`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./LeanCamCombi/Mathlib/Combinatorics/Colex.html#Finset.ofWolex\"><span class=\"name\">Finset</span>.<span class=\"name\">ofWolex</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ± : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./LeanCamCombi/Mathlib/Combinatorics/Colex.html#Finset.Wolex\">Finset.Wolex</a> <span class=\"fn\">Œ±</span></span> <a href=\"./Mathlib/Logic/Equiv/Defs.html#Equiv\">‚âÉ</a> <span class=\"fn\"><a href=\"./Mathlib/Data/Finset/Basic.html#Finset\">Finset</a> <span class=\"fn\">Œ±</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/YaelDillies/LeanCamCombi/blob/41ed909d6e8b5e6b618db6412ed63ba09eba61c3//LeanCamCombi/Mathlib/Combinatorics/Colex.lean#L65-L65","name":"Finset.toWolex","line":65,"kind":"def","docLink":"./LeanCamCombi/Mathlib/Combinatorics/Colex.html#Finset.toWolex","doc":"`toWolex` is the \"identity\" function between `Finset Œ±` and `Finset.Wolex Œ±`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./LeanCamCombi/Mathlib/Combinatorics/Colex.html#Finset.toWolex\"><span class=\"name\">Finset</span>.<span class=\"name\">toWolex</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ± : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Data/Finset/Basic.html#Finset\">Finset</a> <span class=\"fn\">Œ±</span></span> <a href=\"./Mathlib/Logic/Equiv/Defs.html#Equiv\">‚âÉ</a> <span class=\"fn\"><a href=\"./LeanCamCombi/Mathlib/Combinatorics/Colex.html#Finset.Wolex\">Finset.Wolex</a> <span class=\"fn\">Œ±</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/YaelDillies/LeanCamCombi/blob/41ed909d6e8b5e6b618db6412ed63ba09eba61c3//LeanCamCombi/Mathlib/Combinatorics/Colex.lean#L62-L62","name":"Finset.instInhabitedWolex","line":62,"kind":"instance","docLink":"./LeanCamCombi/Mathlib/Combinatorics/Colex.html#Finset.instInhabitedWolex","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./LeanCamCombi/Mathlib/Combinatorics/Colex.html#Finset.instInhabitedWolex\"><span class=\"name\">Finset</span>.<span class=\"name\">instInhabitedWolex</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ± : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> (<span class=\"fn\"><a href=\"./LeanCamCombi/Mathlib/Combinatorics/Colex.html#Finset.Wolex\">Finset.Wolex</a> <span class=\"fn\">Œ±</span></span>)</span></div></div>"},{"info":{"sourceLink":"https://github.com/YaelDillies/LeanCamCombi/blob/41ed909d6e8b5e6b618db6412ed63ba09eba61c3//LeanCamCombi/Mathlib/Combinatorics/Colex.lean#L60-L60","name":"Finset.Wolex","line":60,"kind":"def","docLink":"./LeanCamCombi/Mathlib/Combinatorics/Colex.html#Finset.Wolex","doc":"Type synonym of `Finset Œ±` equipped with the wolexicographic order rather than the inclusion\norder. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./LeanCamCombi/Mathlib/Combinatorics/Colex.html#Finset.Wolex\"><span class=\"name\">Finset</span>.<span class=\"name\">Wolex</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(Œ± : <a href=\"./foundational_types.html\">Type</a> u_3)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a> u_3</div></div>"}]}