{"name":"LeanCamCombi.Mathlib.Data.Set.Image","instances":[],"imports":["Init","Mathlib.Data.Set.Image"],"declarations":[{"info":{"sourceLink":"https://github.com/YaelDillies/LeanCamCombi/blob/41ed909d6e8b5e6b618db6412ed63ba09eba61c3//LeanCamCombi/Mathlib/Data/Set/Image.lean#L8-L8","name":"Set.preimage_mem_singleton_false","line":8,"kind":"theorem","docLink":"./LeanCamCombi/Mathlib/Data/Set/Image.html#Set.preimage_mem_singleton_false","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./LeanCamCombi/Mathlib/Data/Set/Image.html#Set.preimage_mem_singleton_false\"><span class=\"name\">Set</span>.<span class=\"name\">preimage_mem_singleton_false</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(s : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">fun <span class=\"fn\">x</span> =&gt <span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">s</span></span></span>) <a href=\"./Mathlib/Data/Set/Image.html#Set.preimage\">⁻¹'</a> <span class=\"fn\">{<a href=\"./Init/Prelude.html#False\">False</a>}</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">s</span><a href=\"./Mathlib/Order/Basic.html#HasCompl.compl\">ᶜ</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/YaelDillies/LeanCamCombi/blob/41ed909d6e8b5e6b618db6412ed63ba09eba61c3//LeanCamCombi/Mathlib/Data/Set/Image.lean#L7-L7","name":"Set.preimage_mem_singleton_true","line":7,"kind":"theorem","docLink":"./LeanCamCombi/Mathlib/Data/Set/Image.html#Set.preimage_mem_singleton_true","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./LeanCamCombi/Mathlib/Data/Set/Image.html#Set.preimage_mem_singleton_true\"><span class=\"name\">Set</span>.<span class=\"name\">preimage_mem_singleton_true</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(s : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">fun <span class=\"fn\">x</span> =&gt <span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">s</span></span></span>) <a href=\"./Mathlib/Data/Set/Image.html#Set.preimage\">⁻¹'</a> <span class=\"fn\">{<a href=\"./Init/Prelude.html#True\">True</a>}</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">s</span></span></div></div>"}]}