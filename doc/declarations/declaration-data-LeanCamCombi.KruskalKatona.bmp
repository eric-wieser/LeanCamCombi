{"name":"LeanCamCombi.KruskalKatona","instances":[{"typeNames":["_private.LeanCamCombi.KruskalKatona.0.Finset.UW.UsefulCompression"],"name":"Finset.UW.UsefulCompression.instDecidableRel","className":"Decidable"}],"imports":["Init","Mathlib.Algebra.GeomSum","Mathlib.Combinatorics.SetFamily.Intersecting","Mathlib.Data.Finset.Fin","Mathlib.Data.Finset.Sort","LeanCamCombi.Mathlib.Combinatorics.Colex","LeanCamCombi.Mathlib.Combinatorics.SetFamily.Shadow","LeanCamCombi.Mathlib.Data.Finset.Sups","LeanCamCombi.Mathlib.Combinatorics.SetFamily.Compression.UV","LeanCamCombi.Mathlib.Order.RelClasses"],"declarations":[{"info":{"sourceLink":"https://github.com/YaelDillies/LeanCamCombi/blob/41ed909d6e8b5e6b618db6412ed63ba09eba61c3//LeanCamCombi/KruskalKatona.lean#L429-L477","name":"Finset.EKR","line":429,"kind":"theorem","docLink":"./LeanCamCombi/KruskalKatona.html#Finset.EKR","doc":"The **Erdős–Ko–Rado lemma**: The maximum size of an intersecting family in `α` where all sets\nhave size `r` is bounded by `(card α - 1).choose (r - 1)`. This bound is sharp. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./LeanCamCombi/KruskalKatona.html#Finset.EKR\"><span class=\"name\">Finset</span>.<span class=\"name\">EKR</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{𝒜 : <span class=\"fn\"><a href=\"./Mathlib/Data/Finset/Basic.html#Finset\">Finset</a> (<span class=\"fn\"><a href=\"./Mathlib/Data/Finset/Basic.html#Finset\">Finset</a> (<span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">n</span></span>)</span>)</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{r : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h𝒜 : <span class=\"fn\"><a href=\"./Mathlib/Combinatorics/SetFamily/Intersecting.html#Set.Intersecting\">Set.Intersecting</a> <span class=\"fn\">↑<span class=\"fn\">𝒜</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(h₂ : <span class=\"fn\"><a href=\"./Mathlib/Data/Finset/Slice.html#Set.Sized\">Set.Sized</a> <span class=\"fn\">r</span> <span class=\"fn\">↑<span class=\"fn\">𝒜</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(h₃ : <span class=\"fn\"><span class=\"fn\">r</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HDiv.hDiv\">/</a> <span class=\"fn\">2</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Data/Finset/Card.html#Finset.card\">Finset.card</a> <span class=\"fn\">𝒜</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><a href=\"./Mathlib/Data/Nat/Choose/Basic.html#Nat.choose\">Nat.choose</a> (<span class=\"fn\"><span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\">1</span></span>) (<span class=\"fn\"><span class=\"fn\">r</span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\">1</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/YaelDillies/LeanCamCombi/blob/41ed909d6e8b5e6b618db6412ed63ba09eba61c3//LeanCamCombi/KruskalKatona.lean#L379-L423","name":"Finset.lovasz_form","line":379,"kind":"theorem","docLink":"./LeanCamCombi/KruskalKatona.html#Finset.lovasz_form","doc":"A special case of Kruskal-Katona which is sometimes easier to work with.\nIf `|𝒜| ≥ k choose r`, (and everything in `𝒜` has size `r`) then the initial segment we compare to\nis just all the subsets of `{0, ..., k - 1}` of size `r`. The `i`-th iterated shadow of this is all\nthe subsets of `{0, ..., k - 1}` of size `r - i`, so the `i`-th iterated shadow of `𝒜` has at least\n`k.choose (r - i)` elements. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./LeanCamCombi/KruskalKatona.html#Finset.lovasz_form\"><span class=\"name\">Finset</span>.<span class=\"name\">lovasz_form</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{r : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{k : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{i : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{𝒜 : <span class=\"fn\"><a href=\"./Mathlib/Data/Finset/Basic.html#Finset\">Finset</a> (<span class=\"fn\"><a href=\"./Mathlib/Data/Finset/Basic.html#Finset\">Finset</a> (<span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">n</span></span>)</span>)</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hir : <span class=\"fn\"><span class=\"fn\">i</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">r</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hrk : <span class=\"fn\"><span class=\"fn\">r</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">k</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hkn : <span class=\"fn\"><span class=\"fn\">k</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">n</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(h₁ : <span class=\"fn\"><a href=\"./Mathlib/Data/Finset/Slice.html#Set.Sized\">Set.Sized</a> <span class=\"fn\">r</span> <span class=\"fn\">↑<span class=\"fn\">𝒜</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(h₂ : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Data/Nat/Choose/Basic.html#Nat.choose\">Nat.choose</a> <span class=\"fn\">k</span> <span class=\"fn\">r</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><a href=\"./Mathlib/Data/Finset/Card.html#Finset.card\">Finset.card</a> <span class=\"fn\">𝒜</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Data/Nat/Choose/Basic.html#Nat.choose\">Nat.choose</a> <span class=\"fn\">k</span> (<span class=\"fn\"><span class=\"fn\">r</span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\">i</span></span>)</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><a href=\"./Mathlib/Data/Finset/Card.html#Finset.card\">Finset.card</a> (<span class=\"fn\"><a href=\"./Mathlib/Logic/Function/Iterate.html#Nat.iterate\"><span class=\"fn\">Finset.shadow</span><a href=\"./Mathlib/Logic/Function/Iterate.html#Nat.iterate\">^[</a><span class=\"fn\">i</span><a href=\"./Mathlib/Logic/Function/Iterate.html#Nat.iterate\">]</a></a> <span class=\"fn\">𝒜</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/YaelDillies/LeanCamCombi/blob/41ed909d6e8b5e6b618db6412ed63ba09eba61c3//LeanCamCombi/KruskalKatona.lean#L367-L372","name":"Finset.iterated_kk","line":367,"kind":"theorem","docLink":"./LeanCamCombi/KruskalKatona.html#Finset.iterated_kk","doc":"An iterated form of the Kruskal-Katona theorem. In particular, the minimum possible iterated\nshadow size is attained by initial segments. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./LeanCamCombi/KruskalKatona.html#Finset.iterated_kk\"><span class=\"name\">Finset</span>.<span class=\"name\">iterated_kk</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{r : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{k : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{𝒜 : <span class=\"fn\"><a href=\"./Mathlib/Data/Finset/Basic.html#Finset\">Finset</a> (<span class=\"fn\"><a href=\"./Mathlib/Data/Finset/Basic.html#Finset\">Finset</a> (<span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">n</span></span>)</span>)</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{𝒞 : <span class=\"fn\"><a href=\"./Mathlib/Data/Finset/Basic.html#Finset\">Finset</a> (<span class=\"fn\"><a href=\"./Mathlib/Data/Finset/Basic.html#Finset\">Finset</a> (<span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">n</span></span>)</span>)</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h₁ : <span class=\"fn\"><a href=\"./Mathlib/Data/Finset/Slice.html#Set.Sized\">Set.Sized</a> <span class=\"fn\">r</span> <span class=\"fn\">↑<span class=\"fn\">𝒜</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(h₂ : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Data/Finset/Card.html#Finset.card\">Finset.card</a> <span class=\"fn\">𝒞</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><a href=\"./Mathlib/Data/Finset/Card.html#Finset.card\">Finset.card</a> <span class=\"fn\">𝒜</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(h₃ : <span class=\"fn\"><a href=\"./LeanCamCombi/Mathlib/Combinatorics/Colex.html#Finset.Wolex.IsInitSeg\">Finset.Wolex.IsInitSeg</a> <span class=\"fn\">𝒞</span> <span class=\"fn\">r</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Data/Finset/Card.html#Finset.card\">Finset.card</a> (<span class=\"fn\"><a href=\"./Mathlib/Logic/Function/Iterate.html#Nat.iterate\"><span class=\"fn\">Finset.shadow</span><a href=\"./Mathlib/Logic/Function/Iterate.html#Nat.iterate\">^[</a><span class=\"fn\">k</span><a href=\"./Mathlib/Logic/Function/Iterate.html#Nat.iterate\">]</a></a> <span class=\"fn\">𝒞</span></span>)</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><a href=\"./Mathlib/Data/Finset/Card.html#Finset.card\">Finset.card</a> (<span class=\"fn\"><a href=\"./Mathlib/Logic/Function/Iterate.html#Nat.iterate\"><span class=\"fn\">Finset.shadow</span><a href=\"./Mathlib/Logic/Function/Iterate.html#Nat.iterate\">^[</a><span class=\"fn\">k</span><a href=\"./Mathlib/Logic/Function/Iterate.html#Nat.iterate\">]</a></a> <span class=\"fn\">𝒜</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/YaelDillies/LeanCamCombi/blob/41ed909d6e8b5e6b618db6412ed63ba09eba61c3//LeanCamCombi/KruskalKatona.lean#L358-L363","name":"Finset.strengthened_kk","line":358,"kind":"theorem","docLink":"./LeanCamCombi/KruskalKatona.html#Finset.strengthened_kk","doc":"We can strengthen Kruskal-Katona slightly: note the middle and has been relaxed to a `≤`.\nThis shows that the minimum possible shadow size is attained by initial segments. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./LeanCamCombi/KruskalKatona.html#Finset.strengthened_kk\"><span class=\"name\">Finset</span>.<span class=\"name\">strengthened_kk</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{r : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{𝒜 : <span class=\"fn\"><a href=\"./Mathlib/Data/Finset/Basic.html#Finset\">Finset</a> (<span class=\"fn\"><a href=\"./Mathlib/Data/Finset/Basic.html#Finset\">Finset</a> (<span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">n</span></span>)</span>)</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{𝒞 : <span class=\"fn\"><a href=\"./Mathlib/Data/Finset/Basic.html#Finset\">Finset</a> (<span class=\"fn\"><a href=\"./Mathlib/Data/Finset/Basic.html#Finset\">Finset</a> (<span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">n</span></span>)</span>)</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h₁ : <span class=\"fn\"><a href=\"./Mathlib/Data/Finset/Slice.html#Set.Sized\">Set.Sized</a> <span class=\"fn\">r</span> <span class=\"fn\">↑<span class=\"fn\">𝒜</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(h₂ : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Data/Finset/Card.html#Finset.card\">Finset.card</a> <span class=\"fn\">𝒞</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><a href=\"./Mathlib/Data/Finset/Card.html#Finset.card\">Finset.card</a> <span class=\"fn\">𝒜</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(h₃ : <span class=\"fn\"><a href=\"./LeanCamCombi/Mathlib/Combinatorics/Colex.html#Finset.Wolex.IsInitSeg\">Finset.Wolex.IsInitSeg</a> <span class=\"fn\">𝒞</span> <span class=\"fn\">r</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Data/Finset/Card.html#Finset.card\">Finset.card</a> (<span class=\"fn\"><a href=\"./Mathlib/Combinatorics/SetFamily/Shadow.html#Finset.shadow\">Finset.shadow</a> <span class=\"fn\">𝒞</span></span>)</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><a href=\"./Mathlib/Data/Finset/Card.html#Finset.card\">Finset.card</a> (<span class=\"fn\"><a href=\"./Mathlib/Combinatorics/SetFamily/Shadow.html#Finset.shadow\">Finset.shadow</a> <span class=\"fn\">𝒜</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/YaelDillies/LeanCamCombi/blob/41ed909d6e8b5e6b618db6412ed63ba09eba61c3//LeanCamCombi/KruskalKatona.lean#L346-L354","name":"Finset.kruskal_katona","line":346,"kind":"theorem","docLink":"./LeanCamCombi/KruskalKatona.html#Finset.kruskal_katona","doc":"The Kruskal-Katona theorem. It says that given a set family `𝒜` consisting of `r`-sets, and `𝒞`\nan initial segment of the wolex order of the same size, the shadow of `𝒞` is smaller than the shadow\nof `𝒜`. In particular, this gives that the minimum shadow size is achieved by initial segments of\nwolex.\n\nProof notes: Most of the work was done in Kruskal-Katona helper; it gives a `ℬ` which is fully\ncompressed, and so we know it's an initial segment, which by uniqueness is the same as `𝒞`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./LeanCamCombi/KruskalKatona.html#Finset.kruskal_katona\"><span class=\"name\">Finset</span>.<span class=\"name\">kruskal_katona</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{r : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{𝒜 : <span class=\"fn\"><a href=\"./Mathlib/Data/Finset/Basic.html#Finset\">Finset</a> (<span class=\"fn\"><a href=\"./Mathlib/Data/Finset/Basic.html#Finset\">Finset</a> (<span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">n</span></span>)</span>)</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{𝒞 : <span class=\"fn\"><a href=\"./Mathlib/Data/Finset/Basic.html#Finset\">Finset</a> (<span class=\"fn\"><a href=\"./Mathlib/Data/Finset/Basic.html#Finset\">Finset</a> (<span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">n</span></span>)</span>)</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h₁ : <span class=\"fn\"><a href=\"./Mathlib/Data/Finset/Slice.html#Set.Sized\">Set.Sized</a> <span class=\"fn\">r</span> <span class=\"fn\">↑<span class=\"fn\">𝒜</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(h₂ : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Data/Finset/Card.html#Finset.card\">Finset.card</a> <span class=\"fn\">𝒜</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Data/Finset/Card.html#Finset.card\">Finset.card</a> <span class=\"fn\">𝒞</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(h₃ : <span class=\"fn\"><a href=\"./LeanCamCombi/Mathlib/Combinatorics/Colex.html#Finset.Wolex.IsInitSeg\">Finset.Wolex.IsInitSeg</a> <span class=\"fn\">𝒞</span> <span class=\"fn\">r</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Data/Finset/Card.html#Finset.card\">Finset.card</a> (<span class=\"fn\"><a href=\"./Mathlib/Combinatorics/SetFamily/Shadow.html#Finset.shadow\">Finset.shadow</a> <span class=\"fn\">𝒞</span></span>)</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><a href=\"./Mathlib/Data/Finset/Card.html#Finset.card\">Finset.card</a> (<span class=\"fn\"><a href=\"./Mathlib/Combinatorics/SetFamily/Shadow.html#Finset.shadow\">Finset.shadow</a> <span class=\"fn\">𝒜</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/YaelDillies/LeanCamCombi/blob/41ed909d6e8b5e6b618db6412ed63ba09eba61c3//LeanCamCombi/KruskalKatona.lean#L273-L296","name":"Finset.UW.familyMeasure_compression_lt_familyMeasure","line":273,"kind":"theorem","docLink":"./LeanCamCombi/KruskalKatona.html#Finset.UW.familyMeasure_compression_lt_familyMeasure","doc":"Applying a compression strictly decreases the measure. This helps show that \"compress until we\ncan't any more\" is a terminating process. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./LeanCamCombi/KruskalKatona.html#Finset.UW.familyMeasure_compression_lt_familyMeasure\"><span class=\"name\">Finset</span>.<span class=\"name\">UW</span>.<span class=\"name\">familyMeasure_compression_lt_familyMeasure</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{U : <span class=\"fn\"><a href=\"./Mathlib/Data/Finset/Basic.html#Finset\">Finset</a> (<span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">n</span></span>)</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{V : <span class=\"fn\"><a href=\"./Mathlib/Data/Finset/Basic.html#Finset\">Finset</a> (<span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">n</span></span>)</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{hU : <span class=\"fn\"><a href=\"./Mathlib/Data/Finset/Basic.html#Finset.Nonempty\">Finset.Nonempty</a> <span class=\"fn\">U</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{hV : <span class=\"fn\"><a href=\"./Mathlib/Data/Finset/Basic.html#Finset.Nonempty\">Finset.Nonempty</a> <span class=\"fn\">V</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Data/Finset/Lattice.html#Finset.max'\">Finset.max'</a> <span class=\"fn\">U</span> <span class=\"fn\">hU</span></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt</a> <span class=\"fn\"><a href=\"./Mathlib/Data/Finset/Lattice.html#Finset.max'\">Finset.max'</a> <span class=\"fn\">V</span> <span class=\"fn\">hV</span></span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{𝒜 : <span class=\"fn\"><a href=\"./Mathlib/Data/Finset/Basic.html#Finset\">Finset</a> (<span class=\"fn\"><a href=\"./Mathlib/Data/Finset/Basic.html#Finset\">Finset</a> (<span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">n</span></span>)</span>)</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(a : <span class=\"fn\"><span class=\"fn\"><a href=\"./LeanCamCombi/Mathlib/Combinatorics/SetFamily/Compression/UV.html#UW.compression\">UW.compression</a> <span class=\"fn\">U</span> <span class=\"fn\">V</span> <span class=\"fn\">𝒜</span></span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">𝒜</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./LeanCamCombi/KruskalKatona.html#_private.LeanCamCombi.KruskalKatona.0.Finset.UW.familyMeasure\">Finset.UW.familyMeasure</a> (<span class=\"fn\"><a href=\"./LeanCamCombi/Mathlib/Combinatorics/SetFamily/Compression/UV.html#UW.compression\">UW.compression</a> <span class=\"fn\">U</span> <span class=\"fn\">V</span> <span class=\"fn\">𝒜</span></span>)</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt</a> <span class=\"fn\"><a href=\"./LeanCamCombi/KruskalKatona.html#_private.LeanCamCombi.KruskalKatona.0.Finset.UW.familyMeasure\">Finset.UW.familyMeasure</a> <span class=\"fn\">𝒜</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/YaelDillies/LeanCamCombi/blob/41ed909d6e8b5e6b618db6412ed63ba09eba61c3//LeanCamCombi/KruskalKatona.lean#L239-L258","name":"Finset.UW.isInitSeg_of_compressed","line":239,"kind":"theorem","docLink":"./LeanCamCombi/KruskalKatona.html#Finset.UW.isInitSeg_of_compressed","doc":"If we're compressed by all useful compressions, then we're an initial segment. This is the other\nkey Kruskal-Katona part. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./LeanCamCombi/KruskalKatona.html#Finset.UW.isInitSeg_of_compressed\"><span class=\"name\">Finset</span>.<span class=\"name\">UW</span>.<span class=\"name\">isInitSeg_of_compressed</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Init/Order/Defs.html#LinearOrder\">LinearOrder</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ℬ : <span class=\"fn\"><a href=\"./Mathlib/Data/Finset/Basic.html#Finset\">Finset</a> (<span class=\"fn\"><a href=\"./Mathlib/Data/Finset/Basic.html#Finset\">Finset</a> <span class=\"fn\">α</span></span>)</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{r : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h₁ : <span class=\"fn\"><a href=\"./Mathlib/Data/Finset/Slice.html#Set.Sized\">Set.Sized</a> <span class=\"fn\">r</span> <span class=\"fn\">↑<span class=\"fn\">ℬ</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(h₂ : <span class=\"fn\">∀ (<span class=\"fn\">U </span>V : <span class=\"fn\"><a href=\"./Mathlib/Data/Finset/Basic.html#Finset\">Finset</a> <span class=\"fn\">α</span></span>), <span class=\"fn\"><span class=\"fn\"><a href=\"./LeanCamCombi/KruskalKatona.html#_private.LeanCamCombi.KruskalKatona.0.Finset.UW.UsefulCompression\">Finset.UW.UsefulCompression</a> <span class=\"fn\">U</span> <span class=\"fn\">V</span></span> → <span class=\"fn\"><a href=\"./LeanCamCombi/Mathlib/Combinatorics/SetFamily/Compression/UV.html#UW.IsCompressed\">UW.IsCompressed</a> <span class=\"fn\">U</span> <span class=\"fn\">V</span> <span class=\"fn\">ℬ</span></span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./LeanCamCombi/Mathlib/Combinatorics/Colex.html#Finset.Wolex.IsInitSeg\">Finset.Wolex.IsInitSeg</a> <span class=\"fn\">ℬ</span> <span class=\"fn\">r</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/YaelDillies/LeanCamCombi/blob/41ed909d6e8b5e6b618db6412ed63ba09eba61c3//LeanCamCombi/KruskalKatona.lean#L217-L235","name":"Finset.UW.compression_improved","line":217,"kind":"theorem","docLink":"./LeanCamCombi/KruskalKatona.html#Finset.UW.compression_improved","doc":"Applying a good compression will decrease measure, keep cardinality, keep sizes and decrease\nshadow. In particular, 'good' means it's useful, and every smaller compression won't make a\ndifference. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./LeanCamCombi/KruskalKatona.html#Finset.UW.compression_improved\"><span class=\"name\">Finset</span>.<span class=\"name\">UW</span>.<span class=\"name\">compression_improved</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Init/Order/Defs.html#LinearOrder\">LinearOrder</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{U : <span class=\"fn\"><a href=\"./Mathlib/Data/Finset/Basic.html#Finset\">Finset</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{V : <span class=\"fn\"><a href=\"./Mathlib/Data/Finset/Basic.html#Finset\">Finset</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(𝒜 : <span class=\"fn\"><a href=\"./Mathlib/Data/Finset/Basic.html#Finset\">Finset</a> (<span class=\"fn\"><a href=\"./Mathlib/Data/Finset/Basic.html#Finset\">Finset</a> <span class=\"fn\">α</span></span>)</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(h₁ : <span class=\"fn\"><a href=\"./LeanCamCombi/KruskalKatona.html#_private.LeanCamCombi.KruskalKatona.0.Finset.UW.UsefulCompression\">Finset.UW.UsefulCompression</a> <span class=\"fn\">U</span> <span class=\"fn\">V</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(h₂ : <span class=\"fn\">∀ ⦃<span class=\"fn\">U₁ </span>V₁ : <span class=\"fn\"><a href=\"./Mathlib/Data/Finset/Basic.html#Finset\">Finset</a> <span class=\"fn\">α</span></span>⦄, <span class=\"fn\"><span class=\"fn\"><a href=\"./LeanCamCombi/KruskalKatona.html#_private.LeanCamCombi.KruskalKatona.0.Finset.UW.UsefulCompression\">Finset.UW.UsefulCompression</a> <span class=\"fn\">U₁</span> <span class=\"fn\">V₁</span></span> → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Data/Finset/Card.html#Finset.card\">Finset.card</a> <span class=\"fn\">U₁</span></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt</a> <span class=\"fn\"><a href=\"./Mathlib/Data/Finset/Card.html#Finset.card\">Finset.card</a> <span class=\"fn\">U</span></span></span> → <span class=\"fn\"><a href=\"./LeanCamCombi/Mathlib/Combinatorics/SetFamily/Compression/UV.html#UW.IsCompressed\">UW.IsCompressed</a> <span class=\"fn\">U₁</span> <span class=\"fn\">V₁</span> <span class=\"fn\">𝒜</span></span></span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Data/Finset/Card.html#Finset.card\">Finset.card</a> (<span class=\"fn\"><a href=\"./Mathlib/Combinatorics/SetFamily/Shadow.html#Finset.shadow\">Finset.shadow</a> (<span class=\"fn\"><a href=\"./LeanCamCombi/Mathlib/Combinatorics/SetFamily/Compression/UV.html#UW.compression\">UW.compression</a> <span class=\"fn\">U</span> <span class=\"fn\">V</span> <span class=\"fn\">𝒜</span></span>)</span>)</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><a href=\"./Mathlib/Data/Finset/Card.html#Finset.card\">Finset.card</a> (<span class=\"fn\"><a href=\"./Mathlib/Combinatorics/SetFamily/Shadow.html#Finset.shadow\">Finset.shadow</a> <span class=\"fn\">𝒜</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/YaelDillies/LeanCamCombi/blob/41ed909d6e8b5e6b618db6412ed63ba09eba61c3//LeanCamCombi/KruskalKatona.lean#L211-L212","name":"Finset.UW.UsefulCompression.instDecidableRel","line":211,"kind":"instance","docLink":"./LeanCamCombi/KruskalKatona.html#Finset.UW.UsefulCompression.instDecidableRel","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./LeanCamCombi/KruskalKatona.html#Finset.UW.UsefulCompression.instDecidableRel\"><span class=\"name\">Finset</span>.<span class=\"name\">UW</span>.<span class=\"name\">UsefulCompression</span>.<span class=\"name\">instDecidableRel</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Init/Order/Defs.html#LinearOrder\">LinearOrder</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableRel\">DecidableRel</a> <span class=\"fn\">Finset.UW.UsefulCompression</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/YaelDillies/LeanCamCombi/blob/41ed909d6e8b5e6b618db6412ed63ba09eba61c3//LeanCamCombi/KruskalKatona.lean#L197-L205","name":"Finset.UW.toWolex_compress_lt_toWolex","line":197,"kind":"theorem","docLink":"./LeanCamCombi/KruskalKatona.html#Finset.UW.toWolex_compress_lt_toWolex","doc":"Applying the compression makes the set smaller in wolex. This is intuitive since a portion of\nthe set is being \"shifted 'down\" as `max U < max V`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./LeanCamCombi/KruskalKatona.html#Finset.UW.toWolex_compress_lt_toWolex\"><span class=\"name\">Finset</span>.<span class=\"name\">UW</span>.<span class=\"name\">toWolex_compress_lt_toWolex</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Init/Order/Defs.html#LinearOrder\">LinearOrder</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{s : <span class=\"fn\"><a href=\"./Mathlib/Data/Finset/Basic.html#Finset\">Finset</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{U : <span class=\"fn\"><a href=\"./Mathlib/Data/Finset/Basic.html#Finset\">Finset</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{V : <span class=\"fn\"><a href=\"./Mathlib/Data/Finset/Basic.html#Finset\">Finset</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{hU : <span class=\"fn\"><a href=\"./Mathlib/Data/Finset/Basic.html#Finset.Nonempty\">Finset.Nonempty</a> <span class=\"fn\">U</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{hV : <span class=\"fn\"><a href=\"./Mathlib/Data/Finset/Basic.html#Finset.Nonempty\">Finset.Nonempty</a> <span class=\"fn\">V</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Data/Finset/Lattice.html#Finset.max'\">Finset.max'</a> <span class=\"fn\">U</span> <span class=\"fn\">hU</span></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt</a> <span class=\"fn\"><a href=\"./Mathlib/Data/Finset/Lattice.html#Finset.max'\">Finset.max'</a> <span class=\"fn\">V</span> <span class=\"fn\">hV</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hA : <span class=\"fn\"><span class=\"fn\"><a href=\"./LeanCamCombi/Mathlib/Combinatorics/SetFamily/Compression/UV.html#UW.compress\">UW.compress</a> <span class=\"fn\">U</span> <span class=\"fn\">V</span> <span class=\"fn\">s</span></span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">s</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">Finset.toWolex</span> (<span class=\"fn\"><a href=\"./LeanCamCombi/Mathlib/Combinatorics/SetFamily/Compression/UV.html#UW.compress\">UW.compress</a> <span class=\"fn\">U</span> <span class=\"fn\">V</span> <span class=\"fn\">s</span></span>)</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt</a> <span class=\"fn\">↑<span class=\"fn\">Finset.toWolex</span> <span class=\"fn\">s</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/YaelDillies/LeanCamCombi/blob/41ed909d6e8b5e6b618db6412ed63ba09eba61c3//LeanCamCombi/KruskalKatona.lean#L173-L184","name":"Finset.Wolex.IsInitSeg.shadow","line":173,"kind":"theorem","docLink":"./LeanCamCombi/KruskalKatona.html#Finset.Wolex.IsInitSeg.shadow","doc":"The shadow of an initial segment is also an initial segment. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./LeanCamCombi/KruskalKatona.html#Finset.Wolex.IsInitSeg.shadow\"><span class=\"name\">Finset</span>.<span class=\"name\">Wolex</span>.<span class=\"name\">IsInitSeg</span>.<span class=\"name\">shadow</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Init/Order/Defs.html#LinearOrder\">LinearOrder</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{𝒜 : <span class=\"fn\"><a href=\"./Mathlib/Data/Finset/Basic.html#Finset\">Finset</a> (<span class=\"fn\"><a href=\"./Mathlib/Data/Finset/Basic.html#Finset\">Finset</a> <span class=\"fn\">α</span></span>)</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{r : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/Finite/Defs.html#Finite\">Finite</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h₁ : <span class=\"fn\"><a href=\"./LeanCamCombi/Mathlib/Combinatorics/Colex.html#Finset.Wolex.IsInitSeg\">Finset.Wolex.IsInitSeg</a> <span class=\"fn\">𝒜</span> <span class=\"fn\">r</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./LeanCamCombi/Mathlib/Combinatorics/Colex.html#Finset.Wolex.IsInitSeg\">Finset.Wolex.IsInitSeg</a> (<span class=\"fn\"><a href=\"./Mathlib/Combinatorics/SetFamily/Shadow.html#Finset.shadow\">Finset.shadow</a> <span class=\"fn\">𝒜</span></span>) (<span class=\"fn\"><span class=\"fn\">r</span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\">1</span></span>)</span></div></div>"},{"info":{"sourceLink":"https://github.com/YaelDillies/LeanCamCombi/blob/41ed909d6e8b5e6b618db6412ed63ba09eba61c3//LeanCamCombi/KruskalKatona.lean#L87-L170","name":"Finset.Wolex.shadow_initSeg","line":87,"kind":"theorem","docLink":"./LeanCamCombi/KruskalKatona.html#Finset.Wolex.shadow_initSeg","doc":"This is important for iterating Kruskal-Katona: the shadow of an initial segment is also an\ninitial segment. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./LeanCamCombi/KruskalKatona.html#Finset.Wolex.shadow_initSeg\"><span class=\"name\">Finset</span>.<span class=\"name\">Wolex</span>.<span class=\"name\">shadow_initSeg</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Init/Order/Defs.html#LinearOrder\">LinearOrder</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{s : <span class=\"fn\"><a href=\"./Mathlib/Data/Finset/Basic.html#Finset\">Finset</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/Fintype/Basic.html#Fintype\">Fintype</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hs : <span class=\"fn\"><a href=\"./Mathlib/Data/Finset/Basic.html#Finset.Nonempty\">Finset.Nonempty</a> <span class=\"fn\">s</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Combinatorics/SetFamily/Shadow.html#Finset.shadow\">Finset.shadow</a> (<span class=\"fn\"><a href=\"./LeanCamCombi/Mathlib/Combinatorics/Colex.html#Finset.Wolex.initSeg\">Finset.Wolex.initSeg</a> <span class=\"fn\">s</span></span>)</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./LeanCamCombi/Mathlib/Combinatorics/Colex.html#Finset.Wolex.initSeg\">Finset.Wolex.initSeg</a> (<span class=\"fn\"><a href=\"./Mathlib/Data/Finset/Basic.html#Finset.erase\">Finset.erase</a> <span class=\"fn\">s</span> (<span class=\"fn\"><a href=\"./Mathlib/Data/Finset/Lattice.html#Finset.min'\">Finset.min'</a> <span class=\"fn\">s</span> <span class=\"fn\">hs</span></span>)</span>)</span></span></div></div>"}]}