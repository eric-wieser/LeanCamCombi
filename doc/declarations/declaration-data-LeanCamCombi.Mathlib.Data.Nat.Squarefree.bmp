{"name":"LeanCamCombi.Mathlib.Data.Nat.Squarefree","instances":[],"imports":["Init","Mathlib.Data.Nat.Squarefree","LeanCamCombi.Mathlib.Data.Nat.Factorization.Basic","LeanCamCombi.Mathlib.Data.Nat.Order.Lemmas"],"declarations":[{"info":{"sourceLink":"https://github.com/YaelDillies/LeanCamCombi/blob/41ed909d6e8b5e6b618db6412ed63ba09eba61c3//LeanCamCombi/Mathlib/Data/Nat/Squarefree.lean#L50-L53","name":"Nat.prod_primeFactors_invOn_squarefree","line":50,"kind":"theorem","docLink":"./LeanCamCombi/Mathlib/Data/Nat/Squarefree.html#Nat.prod_primeFactors_invOn_squarefree","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./LeanCamCombi/Mathlib/Data/Nat/Squarefree.html#Nat.prod_primeFactors_invOn_squarefree\"><span class=\"name\">Nat</span>.<span class=\"name\">prod_primeFactors_invOn_squarefree</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Data/Set/Function.html#Set.InvOn\">Set.InvOn</a> (<span class=\"fn\">fun <span class=\"fn\">n</span> =&gt <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Data/Nat/Factorization/Basic.html#Nat.factorization\">Nat.factorization</a> <span class=\"fn\">n</span></span>).support</span></span>) (<span class=\"fn\">fun <span class=\"fn\">s</span> =&gt <span class=\"fn\"><a href=\"./Mathlib/Algebra/BigOperators/Basic.html#Finset.prod\">Finset.prod</a> <span class=\"fn\">s</span> <span class=\"fn\">fun <span class=\"fn\">p</span> =&gt <span class=\"fn\">p</span></span></span></span>)\n  <span class=\"fn\">{<span class=\"fn\">s</span> | <span class=\"fn\">∀ (<span class=\"fn\">p</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">p</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">s</span></span> → <span class=\"fn\"><a href=\"./Mathlib/Data/Nat/Prime.html#Nat.Prime\">Nat.Prime</a> <span class=\"fn\">p</span></span></span></span>}</span> <span class=\"fn\">{<span class=\"fn\">n</span> | <span class=\"fn\"><a href=\"./Mathlib/Algebra/Squarefree.html#Squarefree\">Squarefree</a> <span class=\"fn\">n</span></span>}</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/YaelDillies/LeanCamCombi/blob/41ed909d6e8b5e6b618db6412ed63ba09eba61c3//LeanCamCombi/Mathlib/Data/Nat/Squarefree.lean#L37-L48","name":"Nat.primeFactors_div_gcd","line":37,"kind":"theorem","docLink":"./LeanCamCombi/Mathlib/Data/Nat/Squarefree.html#Nat.primeFactors_div_gcd","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./LeanCamCombi/Mathlib/Data/Nat/Squarefree.html#Nat.primeFactors_div_gcd\"><span class=\"name\">Nat</span>.<span class=\"name\">primeFactors_div_gcd</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{m : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hm : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Squarefree.html#Squarefree\">Squarefree</a> <span class=\"fn\">m</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hn : <span class=\"fn\"><span class=\"fn\">n</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./LeanCamCombi/Mathlib/Data/Nat/Factorization/Basic.html#Nat.primeFactors\">Nat.primeFactors</a> (<span class=\"fn\"><span class=\"fn\">m</span> <a href=\"./Init/Prelude.html#HDiv.hDiv\">/</a> <span class=\"fn\"><a href=\"./Init/Data/Nat/Gcd.html#Nat.gcd\">Nat.gcd</a> <span class=\"fn\">m</span> <span class=\"fn\">n</span></span></span>)</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><a href=\"./LeanCamCombi/Mathlib/Data/Nat/Factorization/Basic.html#Nat.primeFactors\">Nat.primeFactors</a> <span class=\"fn\">m</span></span> <a href=\"./Std/Classes/SetNotation.html#SDiff.sdiff\">\\</a> <span class=\"fn\"><a href=\"./LeanCamCombi/Mathlib/Data/Nat/Factorization/Basic.html#Nat.primeFactors\">Nat.primeFactors</a> <span class=\"fn\">n</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/YaelDillies/LeanCamCombi/blob/41ed909d6e8b5e6b618db6412ed63ba09eba61c3//LeanCamCombi/Mathlib/Data/Nat/Squarefree.lean#L29-L35","name":"Nat.primeFactors_prod","line":29,"kind":"theorem","docLink":"./LeanCamCombi/Mathlib/Data/Nat/Squarefree.html#Nat.primeFactors_prod","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./LeanCamCombi/Mathlib/Data/Nat/Squarefree.html#Nat.primeFactors_prod\"><span class=\"name\">Nat</span>.<span class=\"name\">primeFactors_prod</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{s : <span class=\"fn\"><a href=\"./Mathlib/Data/Finset/Basic.html#Finset\">Finset</a> <a href=\"./Init/Prelude.html#Nat\">ℕ</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hs : <span class=\"fn\">∀ (<span class=\"fn\">p</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">p</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">s</span></span> → <span class=\"fn\"><a href=\"./Mathlib/Data/Nat/Prime.html#Nat.Prime\">Nat.Prime</a> <span class=\"fn\">p</span></span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./LeanCamCombi/Mathlib/Data/Nat/Factorization/Basic.html#Nat.primeFactors\">Nat.primeFactors</a> (<span class=\"fn\"><a href=\"./Mathlib/Algebra/BigOperators/Basic.html#Finset.prod\">Finset.prod</a> <span class=\"fn\">s</span> <span class=\"fn\">fun <span class=\"fn\">p</span> =&gt <span class=\"fn\">p</span></span></span>)</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">s</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/YaelDillies/LeanCamCombi/blob/41ed909d6e8b5e6b618db6412ed63ba09eba61c3//LeanCamCombi/Mathlib/Data/Nat/Squarefree.lean#L23-L27","name":"Nat.prod_primeFactors_of_squarefree","line":23,"kind":"theorem","docLink":"./LeanCamCombi/Mathlib/Data/Nat/Squarefree.html#Nat.prod_primeFactors_of_squarefree","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./LeanCamCombi/Mathlib/Data/Nat/Squarefree.html#Nat.prod_primeFactors_of_squarefree\"><span class=\"name\">Nat</span>.<span class=\"name\">prod_primeFactors_of_squarefree</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hn : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Squarefree.html#Squarefree\">Squarefree</a> <span class=\"fn\">n</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/BigOperators/Basic.html#Finset.prod\">Finset.prod</a> (<span class=\"fn\"><a href=\"./LeanCamCombi/Mathlib/Data/Nat/Factorization/Basic.html#Nat.primeFactors\">Nat.primeFactors</a> <span class=\"fn\">n</span></span>) <span class=\"fn\">fun <span class=\"fn\">p</span> =&gt <span class=\"fn\">p</span></span></span>) <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">n</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/YaelDillies/LeanCamCombi/blob/41ed909d6e8b5e6b618db6412ed63ba09eba61c3//LeanCamCombi/Mathlib/Data/Nat/Squarefree.lean#L19-L21","name":"Nat.factorization_eq_one_of_squarefree","line":19,"kind":"theorem","docLink":"./LeanCamCombi/Mathlib/Data/Nat/Squarefree.html#Nat.factorization_eq_one_of_squarefree","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./LeanCamCombi/Mathlib/Data/Nat/Squarefree.html#Nat.factorization_eq_one_of_squarefree\"><span class=\"name\">Nat</span>.<span class=\"name\">factorization_eq_one_of_squarefree</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{p : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hn : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Squarefree.html#Squarefree\">Squarefree</a> <span class=\"fn\">n</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hp : <span class=\"fn\"><a href=\"./Mathlib/Data/Nat/Prime.html#Nat.Prime\">Nat.Prime</a> <span class=\"fn\">p</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hpn : <span class=\"fn\"><span class=\"fn\">p</span> <a href=\"./Std/Classes/Dvd.html#Dvd.dvd\">∣</a> <span class=\"fn\">n</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">↑(<span class=\"fn\"><a href=\"./Mathlib/Data/Nat/Factorization/Basic.html#Nat.factorization\">Nat.factorization</a> <span class=\"fn\">n</span></span>) <span class=\"fn\">p</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">1</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/YaelDillies/LeanCamCombi/blob/41ed909d6e8b5e6b618db6412ed63ba09eba61c3//LeanCamCombi/Mathlib/Data/Nat/Squarefree.lean#L13-L17","name":"Nat.coprime_div_gcd_of_squarefree","line":13,"kind":"theorem","docLink":"./LeanCamCombi/Mathlib/Data/Nat/Squarefree.html#Nat.coprime_div_gcd_of_squarefree","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./LeanCamCombi/Mathlib/Data/Nat/Squarefree.html#Nat.coprime_div_gcd_of_squarefree\"><span class=\"name\">Nat</span>.<span class=\"name\">coprime_div_gcd_of_squarefree</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{m : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hm : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Squarefree.html#Squarefree\">Squarefree</a> <span class=\"fn\">m</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hn : <span class=\"fn\"><span class=\"fn\">n</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Std/Data/Nat/Gcd.html#Nat.Coprime\">Nat.Coprime</a> (<span class=\"fn\"><span class=\"fn\">m</span> <a href=\"./Init/Prelude.html#HDiv.hDiv\">/</a> <span class=\"fn\"><a href=\"./Init/Data/Nat/Gcd.html#Nat.gcd\">Nat.gcd</a> <span class=\"fn\">m</span> <span class=\"fn\">n</span></span></span>) <span class=\"fn\">n</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/YaelDillies/LeanCamCombi/blob/41ed909d6e8b5e6b618db6412ed63ba09eba61c3//LeanCamCombi/Mathlib/Data/Nat/Squarefree.lean#L11-L11","name":"Squarefree.natFactorization_le_one","line":11,"kind":"theorem","docLink":"./LeanCamCombi/Mathlib/Data/Nat/Squarefree.html#Squarefree.natFactorization_le_one","doc":"**Alias** of `Nat.Squarefree.factorization_le_one`."},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./LeanCamCombi/Mathlib/Data/Nat/Squarefree.html#Squarefree.natFactorization_le_one\"><span class=\"name\">Squarefree</span>.<span class=\"name\">natFactorization_le_one</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(p : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hn : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Squarefree.html#Squarefree\">Squarefree</a> <span class=\"fn\">n</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">↑(<span class=\"fn\"><a href=\"./Mathlib/Data/Nat/Factorization/Basic.html#Nat.factorization\">Nat.factorization</a> <span class=\"fn\">n</span></span>) <span class=\"fn\">p</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">1</span></span></div></div>"}]}