{"name":"LeanCamCombi.BernoulliSeq","instances":[],"imports":["Init","Mathlib.Algebra.BigOperators.Basic","Mathlib.Probability.IdentDistrib","LeanCamCombi.Mathlib.Pmf","LeanCamCombi.Mathlib.Probability.Independence.Basic"],"declarations":[{"info":{"sourceLink":"https://github.com/YaelDillies/LeanCamCombi/blob/41ed909d6e8b5e6b618db6412ed63ba09eba61c3//LeanCamCombi/BernoulliSeq.lean#L134-L144","name":"ProbabilityTheory.IsBernoulliSeq.union","line":134,"kind":"theorem","docLink":"./LeanCamCombi/BernoulliSeq.html#ProbabilityTheory.IsBernoulliSeq.union","doc":"The union of a sequence of independent `p`-Bernoulli random variables and `q`-Bernoulli random\nvariables is a sequence of independent `p + q - p * q`-Bernoulli random variables. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./LeanCamCombi/BernoulliSeq.html#ProbabilityTheory.IsBernoulliSeq.union\"><span class=\"name\">ProbabilityTheory</span>.<span class=\"name\">IsBernoulliSeq</span>.<span class=\"name\">union</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Ω : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSpace\">MeasurableSpace</a> <span class=\"fn\">Ω</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <span class=\"fn\"><span class=\"fn\">Ω</span> → <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Y : <span class=\"fn\"><span class=\"fn\">Ω</span> → <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{μ : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/MeasureSpaceDef.html#MeasureTheory.Measure\">MeasureTheory.Measure</a> <span class=\"fn\">Ω</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{p : <a href=\"./Mathlib/Data/Real/NNReal.html#NNReal\">NNReal</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{q : <a href=\"./Mathlib/Data/Real/NNReal.html#NNReal\">NNReal</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hX : <span class=\"fn\"><a href=\"./LeanCamCombi/BernoulliSeq.html#ProbabilityTheory.IsBernoulliSeq\">ProbabilityTheory.IsBernoulliSeq</a> <span class=\"fn\">X</span> <span class=\"fn\">p</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hY : <span class=\"fn\"><a href=\"./LeanCamCombi/BernoulliSeq.html#ProbabilityTheory.IsBernoulliSeq\">ProbabilityTheory.IsBernoulliSeq</a> <span class=\"fn\">Y</span> <span class=\"fn\">q</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/MeasureSpace.html#MeasureTheory.IsProbabilityMeasure\">MeasureTheory.IsProbabilityMeasure</a> <span class=\"fn\">μ</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><a href=\"./Mathlib/Probability/Independence/Basic.html#ProbabilityTheory.IndepFun\">ProbabilityTheory.IndepFun</a> <span class=\"fn\">X</span> <span class=\"fn\">Y</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./LeanCamCombi/BernoulliSeq.html#ProbabilityTheory.IsBernoulliSeq\">ProbabilityTheory.IsBernoulliSeq</a> (<span class=\"fn\">fun <span class=\"fn\">ω</span> =&gt <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">X</span> <span class=\"fn\">ω</span></span> <a href=\"./Std/Classes/SetNotation.html#Union.union\">∪</a> <span class=\"fn\"><span class=\"fn\">Y</span> <span class=\"fn\">ω</span></span></span></span>) (<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">p</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">q</span></span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\"><span class=\"fn\">p</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">q</span></span></span>)</span></div></div>"},{"info":{"sourceLink":"https://github.com/YaelDillies/LeanCamCombi/blob/41ed909d6e8b5e6b618db6412ed63ba09eba61c3//LeanCamCombi/BernoulliSeq.lean#L110-L130","name":"ProbabilityTheory.IsBernoulliSeq.inter","line":110,"kind":"theorem","docLink":"./LeanCamCombi/BernoulliSeq.html#ProbabilityTheory.IsBernoulliSeq.inter","doc":"The intersection of a sequence of independent `p`-Bernoulli and `q`-Bernoulli random variables\nis a sequence of independent `p * q`-Bernoulli random variables. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./LeanCamCombi/BernoulliSeq.html#ProbabilityTheory.IsBernoulliSeq.inter\"><span class=\"name\">ProbabilityTheory</span>.<span class=\"name\">IsBernoulliSeq</span>.<span class=\"name\">inter</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Ω : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSpace\">MeasurableSpace</a> <span class=\"fn\">Ω</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <span class=\"fn\"><span class=\"fn\">Ω</span> → <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Y : <span class=\"fn\"><span class=\"fn\">Ω</span> → <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{μ : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/MeasureSpaceDef.html#MeasureTheory.Measure\">MeasureTheory.Measure</a> <span class=\"fn\">Ω</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{p : <a href=\"./Mathlib/Data/Real/NNReal.html#NNReal\">NNReal</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{q : <a href=\"./Mathlib/Data/Real/NNReal.html#NNReal\">NNReal</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hX : <span class=\"fn\"><a href=\"./LeanCamCombi/BernoulliSeq.html#ProbabilityTheory.IsBernoulliSeq\">ProbabilityTheory.IsBernoulliSeq</a> <span class=\"fn\">X</span> <span class=\"fn\">p</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hY : <span class=\"fn\"><a href=\"./LeanCamCombi/BernoulliSeq.html#ProbabilityTheory.IsBernoulliSeq\">ProbabilityTheory.IsBernoulliSeq</a> <span class=\"fn\">Y</span> <span class=\"fn\">q</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/MeasureSpace.html#MeasureTheory.IsProbabilityMeasure\">MeasureTheory.IsProbabilityMeasure</a> <span class=\"fn\">μ</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><a href=\"./Mathlib/Probability/Independence/Basic.html#ProbabilityTheory.IndepFun\">ProbabilityTheory.IndepFun</a> <span class=\"fn\">X</span> <span class=\"fn\">Y</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./LeanCamCombi/BernoulliSeq.html#ProbabilityTheory.IsBernoulliSeq\">ProbabilityTheory.IsBernoulliSeq</a> (<span class=\"fn\">fun <span class=\"fn\">ω</span> =&gt <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">X</span> <span class=\"fn\">ω</span></span> <a href=\"./Std/Classes/SetNotation.html#Inter.inter\">∩</a> <span class=\"fn\"><span class=\"fn\">Y</span> <span class=\"fn\">ω</span></span></span></span>) (<span class=\"fn\"><span class=\"fn\">p</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">q</span></span>)</span></div></div>"},{"info":{"sourceLink":"https://github.com/YaelDillies/LeanCamCombi/blob/41ed909d6e8b5e6b618db6412ed63ba09eba61c3//LeanCamCombi/BernoulliSeq.lean#L97-L106","name":"ProbabilityTheory.IsBernoulliSeq.compl","line":97,"kind":"theorem","docLink":"./LeanCamCombi/BernoulliSeq.html#ProbabilityTheory.IsBernoulliSeq.compl","doc":"The complement of a sequence of independent `p`-Bernoulli random variables is a sequence of\nindependent `1 - p`-Bernoulli random variables. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./LeanCamCombi/BernoulliSeq.html#ProbabilityTheory.IsBernoulliSeq.compl\"><span class=\"name\">ProbabilityTheory</span>.<span class=\"name\">IsBernoulliSeq</span>.<span class=\"name\">compl</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Ω : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSpace\">MeasurableSpace</a> <span class=\"fn\">Ω</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <span class=\"fn\"><span class=\"fn\">Ω</span> → <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{μ : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/MeasureSpaceDef.html#MeasureTheory.Measure\">MeasureTheory.Measure</a> <span class=\"fn\">Ω</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{p : <a href=\"./Mathlib/Data/Real/NNReal.html#NNReal\">NNReal</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hX : <span class=\"fn\"><a href=\"./LeanCamCombi/BernoulliSeq.html#ProbabilityTheory.IsBernoulliSeq\">ProbabilityTheory.IsBernoulliSeq</a> <span class=\"fn\">X</span> <span class=\"fn\">p</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./LeanCamCombi/BernoulliSeq.html#ProbabilityTheory.IsBernoulliSeq\">ProbabilityTheory.IsBernoulliSeq</a> (<span class=\"fn\">fun <span class=\"fn\">ω</span> =&gt <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">X</span> <span class=\"fn\">ω</span></span>)<a href=\"./Mathlib/Order/Basic.html#HasCompl.compl\">ᶜ</a></span></span>) (<span class=\"fn\"><span class=\"fn\">1</span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\">p</span></span>)</span></div></div>"},{"info":{"sourceLink":"https://github.com/YaelDillies/LeanCamCombi/blob/41ed909d6e8b5e6b618db6412ed63ba09eba61c3//LeanCamCombi/BernoulliSeq.lean#L76-L93","name":"ProbabilityTheory.IsBernoulliSeq.meas","line":76,"kind":"theorem","docLink":"./LeanCamCombi/BernoulliSeq.html#ProbabilityTheory.IsBernoulliSeq.meas","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./LeanCamCombi/BernoulliSeq.html#ProbabilityTheory.IsBernoulliSeq.meas\"><span class=\"name\">ProbabilityTheory</span>.<span class=\"name\">IsBernoulliSeq</span>.<span class=\"name\">meas</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Ω : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSpace\">MeasurableSpace</a> <span class=\"fn\">Ω</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <span class=\"fn\"><span class=\"fn\">Ω</span> → <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{μ : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/MeasureSpaceDef.html#MeasureTheory.Measure\">MeasureTheory.Measure</a> <span class=\"fn\">Ω</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{p : <a href=\"./Mathlib/Data/Real/NNReal.html#NNReal\">NNReal</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hX : <span class=\"fn\"><a href=\"./LeanCamCombi/BernoulliSeq.html#ProbabilityTheory.IsBernoulliSeq\">ProbabilityTheory.IsBernoulliSeq</a> <span class=\"fn\">X</span> <span class=\"fn\">p</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/MeasureSpace.html#MeasureTheory.IsProbabilityMeasure\">MeasureTheory.IsProbabilityMeasure</a> <span class=\"fn\">μ</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/Fintype/Basic.html#Fintype\">Fintype</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(s : <span class=\"fn\"><a href=\"./Mathlib/Data/Finset/Basic.html#Finset\">Finset</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">↑<span class=\"fn\">μ</span></span> <span class=\"fn\">{<span class=\"fn\">ω</span> | <span class=\"fn\"><span class=\"fn\">{<span class=\"fn\">a</span> | <span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><span class=\"fn\">X</span> <span class=\"fn\">ω</span></span></span>}</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">↑<span class=\"fn\">s</span></span></span>}</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">p</span></span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\"><a href=\"./Mathlib/Data/Finset/Card.html#Finset.card\">Finset.card</a> <span class=\"fn\">s</span></span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">1</span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\">↑<span class=\"fn\">p</span></span></span>) <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> (<span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Data/Fintype/Card.html#Fintype.card\">Fintype.card</a> <span class=\"fn\">α</span></span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\"><a href=\"./Mathlib/Data/Finset/Card.html#Finset.card\">Finset.card</a> <span class=\"fn\">s</span></span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/YaelDillies/LeanCamCombi/blob/41ed909d6e8b5e6b618db6412ed63ba09eba61c3//LeanCamCombi/BernoulliSeq.lean#L67-L72","name":"ProbabilityTheory.IsBernoulliSeq.meas_apply","line":67,"kind":"theorem","docLink":"./LeanCamCombi/BernoulliSeq.html#ProbabilityTheory.IsBernoulliSeq.meas_apply","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./LeanCamCombi/BernoulliSeq.html#ProbabilityTheory.IsBernoulliSeq.meas_apply\"><span class=\"name\">ProbabilityTheory</span>.<span class=\"name\">IsBernoulliSeq</span>.<span class=\"name\">meas_apply</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Ω : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSpace\">MeasurableSpace</a> <span class=\"fn\">Ω</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <span class=\"fn\"><span class=\"fn\">Ω</span> → <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{μ : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/MeasureSpaceDef.html#MeasureTheory.Measure\">MeasureTheory.Measure</a> <span class=\"fn\">Ω</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{p : <a href=\"./Mathlib/Data/Real/NNReal.html#NNReal\">NNReal</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hX : <span class=\"fn\"><a href=\"./LeanCamCombi/BernoulliSeq.html#ProbabilityTheory.IsBernoulliSeq\">ProbabilityTheory.IsBernoulliSeq</a> <span class=\"fn\">X</span> <span class=\"fn\">p</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(a : <span class=\"fn\">α</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">↑<span class=\"fn\">μ</span></span> <span class=\"fn\">{<span class=\"fn\">ω</span> | <span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><span class=\"fn\">X</span> <span class=\"fn\">ω</span></span></span>}</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">↑<span class=\"fn\">p</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/YaelDillies/LeanCamCombi/blob/41ed909d6e8b5e6b618db6412ed63ba09eba61c3//LeanCamCombi/BernoulliSeq.lean#L62-L65","name":"ProbabilityTheory.IsBernoulliSeq.identDistrib","line":62,"kind":"theorem","docLink":"./LeanCamCombi/BernoulliSeq.html#ProbabilityTheory.IsBernoulliSeq.identDistrib","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./LeanCamCombi/BernoulliSeq.html#ProbabilityTheory.IsBernoulliSeq.identDistrib\"><span class=\"name\">ProbabilityTheory</span>.<span class=\"name\">IsBernoulliSeq</span>.<span class=\"name\">identDistrib</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Ω : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSpace\">MeasurableSpace</a> <span class=\"fn\">Ω</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <span class=\"fn\"><span class=\"fn\">Ω</span> → <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{μ : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/MeasureSpaceDef.html#MeasureTheory.Measure\">MeasureTheory.Measure</a> <span class=\"fn\">Ω</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{p : <a href=\"./Mathlib/Data/Real/NNReal.html#NNReal\">NNReal</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hX : <span class=\"fn\"><a href=\"./LeanCamCombi/BernoulliSeq.html#ProbabilityTheory.IsBernoulliSeq\">ProbabilityTheory.IsBernoulliSeq</a> <span class=\"fn\">X</span> <span class=\"fn\">p</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(a : <span class=\"fn\">α</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(j : <span class=\"fn\">α</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Probability/IdentDistrib.html#ProbabilityTheory.IdentDistrib\">ProbabilityTheory.IdentDistrib</a> (<span class=\"fn\">fun <span class=\"fn\">ω</span> =&gt <span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><span class=\"fn\">X</span> <span class=\"fn\">ω</span></span></span></span>) <span class=\"fn\">fun <span class=\"fn\">ω</span> =&gt <span class=\"fn\"><span class=\"fn\">X</span> <span class=\"fn\">ω</span> <span class=\"fn\">j</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/YaelDillies/LeanCamCombi/blob/41ed909d6e8b5e6b618db6412ed63ba09eba61c3//LeanCamCombi/BernoulliSeq.lean#L58-L60","name":"ProbabilityTheory.IsBernoulliSeq.nullMeasurableSet","line":58,"kind":"theorem","docLink":"./LeanCamCombi/BernoulliSeq.html#ProbabilityTheory.IsBernoulliSeq.nullMeasurableSet","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./LeanCamCombi/BernoulliSeq.html#ProbabilityTheory.IsBernoulliSeq.nullMeasurableSet\"><span class=\"name\">ProbabilityTheory</span>.<span class=\"name\">IsBernoulliSeq</span>.<span class=\"name\">nullMeasurableSet</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Ω : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSpace\">MeasurableSpace</a> <span class=\"fn\">Ω</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <span class=\"fn\"><span class=\"fn\">Ω</span> → <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{μ : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/MeasureSpaceDef.html#MeasureTheory.Measure\">MeasureTheory.Measure</a> <span class=\"fn\">Ω</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{p : <a href=\"./Mathlib/Data/Real/NNReal.html#NNReal\">NNReal</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hX : <span class=\"fn\"><a href=\"./LeanCamCombi/BernoulliSeq.html#ProbabilityTheory.IsBernoulliSeq\">ProbabilityTheory.IsBernoulliSeq</a> <span class=\"fn\">X</span> <span class=\"fn\">p</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(a : <span class=\"fn\">α</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/NullMeasurable.html#MeasureTheory.NullMeasurableSet\">MeasureTheory.NullMeasurableSet</a> <span class=\"fn\">{<span class=\"fn\">ω</span> | <span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><span class=\"fn\">X</span> <span class=\"fn\">ω</span></span></span>}</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/YaelDillies/LeanCamCombi/blob/41ed909d6e8b5e6b618db6412ed63ba09eba61c3//LeanCamCombi/BernoulliSeq.lean#L49-L56","name":"ProbabilityTheory.IsBernoulliSeq.aemeasurable","line":49,"kind":"theorem","docLink":"./LeanCamCombi/BernoulliSeq.html#ProbabilityTheory.IsBernoulliSeq.aemeasurable","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./LeanCamCombi/BernoulliSeq.html#ProbabilityTheory.IsBernoulliSeq.aemeasurable\"><span class=\"name\">ProbabilityTheory</span>.<span class=\"name\">IsBernoulliSeq</span>.<span class=\"name\">aemeasurable</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Ω : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSpace\">MeasurableSpace</a> <span class=\"fn\">Ω</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <span class=\"fn\"><span class=\"fn\">Ω</span> → <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{μ : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/MeasureSpaceDef.html#MeasureTheory.Measure\">MeasureTheory.Measure</a> <span class=\"fn\">Ω</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{p : <a href=\"./Mathlib/Data/Real/NNReal.html#NNReal\">NNReal</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hX : <span class=\"fn\"><a href=\"./LeanCamCombi/BernoulliSeq.html#ProbabilityTheory.IsBernoulliSeq\">ProbabilityTheory.IsBernoulliSeq</a> <span class=\"fn\">X</span> <span class=\"fn\">p</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(a : <span class=\"fn\">α</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/MeasureSpaceDef.html#AEMeasurable\">AEMeasurable</a> <span class=\"fn\">fun <span class=\"fn\">ω</span> =&gt <span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><span class=\"fn\">X</span> <span class=\"fn\">ω</span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/YaelDillies/LeanCamCombi/blob/41ed909d6e8b5e6b618db6412ed63ba09eba61c3//LeanCamCombi/BernoulliSeq.lean#L45-L47","name":"ProbabilityTheory.IsBernoulliSeq.ne_zero","line":45,"kind":"theorem","docLink":"./LeanCamCombi/BernoulliSeq.html#ProbabilityTheory.IsBernoulliSeq.ne_zero","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./LeanCamCombi/BernoulliSeq.html#ProbabilityTheory.IsBernoulliSeq.ne_zero\"><span class=\"name\">ProbabilityTheory</span>.<span class=\"name\">IsBernoulliSeq</span>.<span class=\"name\">ne_zero</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Ω : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSpace\">MeasurableSpace</a> <span class=\"fn\">Ω</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <span class=\"fn\"><span class=\"fn\">Ω</span> → <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{μ : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/MeasureSpaceDef.html#MeasureTheory.Measure\">MeasureTheory.Measure</a> <span class=\"fn\">Ω</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{p : <a href=\"./Mathlib/Data/Real/NNReal.html#NNReal\">NNReal</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hX : <span class=\"fn\"><a href=\"./LeanCamCombi/BernoulliSeq.html#ProbabilityTheory.IsBernoulliSeq\">ProbabilityTheory.IsBernoulliSeq</a> <span class=\"fn\">X</span> <span class=\"fn\">p</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Nonempty\">Nonempty</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">μ</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/YaelDillies/LeanCamCombi/blob/41ed909d6e8b5e6b618db6412ed63ba09eba61c3//LeanCamCombi/BernoulliSeq.lean#L38-L38","name":"ProbabilityTheory.IsBernoulliSeq.map","line":38,"kind":"def","docLink":"./LeanCamCombi/BernoulliSeq.html#ProbabilityTheory.IsBernoulliSeq.map","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./LeanCamCombi/BernoulliSeq.html#ProbabilityTheory.IsBernoulliSeq.map\"><span class=\"name\">ProbabilityTheory</span>.<span class=\"name\">IsBernoulliSeq</span>.<span class=\"name\">map</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Ω : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSpace\">MeasurableSpace</a> <span class=\"fn\">Ω</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <span class=\"fn\"><span class=\"fn\">Ω</span> → <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{p : <span class=\"fn\"><a href=\"./Init/Prelude.html#outParam\">outParam</a> <a href=\"./Mathlib/Data/Real/NNReal.html#NNReal\">NNReal</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{μ : <span class=\"fn\"><a href=\"./Init/Meta.html#autoParam\">autoParam</a> (<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/MeasureSpaceDef.html#MeasureTheory.Measure\">MeasureTheory.Measure</a> <span class=\"fn\">Ω</span></span>) <a href=\"./LeanCamCombi/BernoulliSeq.html#_auto._@.LeanCamCombi.BernoulliSeq._hyg.29\">_auto✝</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(self : <span class=\"fn\"><a href=\"./LeanCamCombi/BernoulliSeq.html#ProbabilityTheory.IsBernoulliSeq\">ProbabilityTheory.IsBernoulliSeq</a> <span class=\"fn\">X</span> <span class=\"fn\">p</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(a : <span class=\"fn\">α</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/MeasureSpace.html#MeasureTheory.Measure.map\">MeasureTheory.Measure.map</a> (<span class=\"fn\">fun <span class=\"fn\">ω</span> =&gt <span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><span class=\"fn\">X</span> <span class=\"fn\">ω</span></span></span></span>) <span class=\"fn\">μ</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Probability/ProbabilityMassFunction/Basic.html#Pmf.toMeasure\">Pmf.toMeasure</a> (<span class=\"fn\"><a href=\"./LeanCamCombi/Mathlib/Pmf.html#Pmf.bernoulli'\">Pmf.bernoulli'</a> <span class=\"fn\">p</span> <span class=\"fn\">(_ : <span class=\"fn\"><span class=\"fn\">p</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">1</span></span>)</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/YaelDillies/LeanCamCombi/blob/41ed909d6e8b5e6b618db6412ed63ba09eba61c3//LeanCamCombi/BernoulliSeq.lean#L37-L37","name":"ProbabilityTheory.IsBernoulliSeq.iIndepFun","line":37,"kind":"def","docLink":"./LeanCamCombi/BernoulliSeq.html#ProbabilityTheory.IsBernoulliSeq.iIndepFun","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./LeanCamCombi/BernoulliSeq.html#ProbabilityTheory.IsBernoulliSeq.iIndepFun\"><span class=\"name\">ProbabilityTheory</span>.<span class=\"name\">IsBernoulliSeq</span>.<span class=\"name\">iIndepFun</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Ω : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSpace\">MeasurableSpace</a> <span class=\"fn\">Ω</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <span class=\"fn\"><span class=\"fn\">Ω</span> → <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{p : <span class=\"fn\"><a href=\"./Init/Prelude.html#outParam\">outParam</a> <a href=\"./Mathlib/Data/Real/NNReal.html#NNReal\">NNReal</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{μ : <span class=\"fn\"><a href=\"./Init/Meta.html#autoParam\">autoParam</a> (<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/MeasureSpaceDef.html#MeasureTheory.Measure\">MeasureTheory.Measure</a> <span class=\"fn\">Ω</span></span>) <a href=\"./LeanCamCombi/BernoulliSeq.html#_auto._@.LeanCamCombi.BernoulliSeq._hyg.29\">_auto✝</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(self : <span class=\"fn\"><a href=\"./LeanCamCombi/BernoulliSeq.html#ProbabilityTheory.IsBernoulliSeq\">ProbabilityTheory.IsBernoulliSeq</a> <span class=\"fn\">X</span> <span class=\"fn\">p</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Probability/Independence/Basic.html#ProbabilityTheory.iIndepFun\">ProbabilityTheory.iIndepFun</a> <span class=\"fn\">inferInstance</span> <span class=\"fn\">fun <span class=\"fn\">a</span> <span class=\"fn\">ω</span> =&gt <span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><span class=\"fn\">X</span> <span class=\"fn\">ω</span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/YaelDillies/LeanCamCombi/blob/41ed909d6e8b5e6b618db6412ed63ba09eba61c3//LeanCamCombi/BernoulliSeq.lean#L36-L36","name":"ProbabilityTheory.IsBernoulliSeq.le_one","line":36,"kind":"def","docLink":"./LeanCamCombi/BernoulliSeq.html#ProbabilityTheory.IsBernoulliSeq.le_one","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./LeanCamCombi/BernoulliSeq.html#ProbabilityTheory.IsBernoulliSeq.le_one\"><span class=\"name\">ProbabilityTheory</span>.<span class=\"name\">IsBernoulliSeq</span>.<span class=\"name\">le_one</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Ω : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSpace\">MeasurableSpace</a> <span class=\"fn\">Ω</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <span class=\"fn\"><span class=\"fn\">Ω</span> → <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{p : <span class=\"fn\"><a href=\"./Init/Prelude.html#outParam\">outParam</a> <a href=\"./Mathlib/Data/Real/NNReal.html#NNReal\">NNReal</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{μ : <span class=\"fn\"><a href=\"./Init/Meta.html#autoParam\">autoParam</a> (<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/MeasureSpaceDef.html#MeasureTheory.Measure\">MeasureTheory.Measure</a> <span class=\"fn\">Ω</span></span>) <a href=\"./LeanCamCombi/BernoulliSeq.html#_auto._@.LeanCamCombi.BernoulliSeq._hyg.29\">_auto✝</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(self : <span class=\"fn\"><a href=\"./LeanCamCombi/BernoulliSeq.html#ProbabilityTheory.IsBernoulliSeq\">ProbabilityTheory.IsBernoulliSeq</a> <span class=\"fn\">X</span> <span class=\"fn\">p</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">p</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">1</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/YaelDillies/LeanCamCombi/blob/41ed909d6e8b5e6b618db6412ed63ba09eba61c3//LeanCamCombi/BernoulliSeq.lean#L34-L34","name":"ProbabilityTheory.IsBernoulliSeq.mk","line":34,"kind":"ctor","docLink":"./LeanCamCombi/BernoulliSeq.html#ProbabilityTheory.IsBernoulliSeq.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./LeanCamCombi/BernoulliSeq.html#ProbabilityTheory.IsBernoulliSeq.mk\"><span class=\"name\">ProbabilityTheory</span>.<span class=\"name\">IsBernoulliSeq</span>.<span class=\"name\">mk</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Ω : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSpace\">MeasurableSpace</a> <span class=\"fn\">Ω</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <span class=\"fn\"><span class=\"fn\">Ω</span> → <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{p : <span class=\"fn\"><a href=\"./Init/Prelude.html#outParam\">outParam</a> <a href=\"./Mathlib/Data/Real/NNReal.html#NNReal\">NNReal</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{μ : <span class=\"fn\"><a href=\"./Init/Meta.html#autoParam\">autoParam</a> (<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/MeasureSpaceDef.html#MeasureTheory.Measure\">MeasureTheory.Measure</a> <span class=\"fn\">Ω</span></span>) <a href=\"./LeanCamCombi/BernoulliSeq.html#_auto._@.LeanCamCombi.BernoulliSeq._hyg.29\">_auto✝</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(le_one : <span class=\"fn\"><span class=\"fn\">p</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">1</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(iIndepFun : <span class=\"fn\"><a href=\"./Mathlib/Probability/Independence/Basic.html#ProbabilityTheory.iIndepFun\">ProbabilityTheory.iIndepFun</a> <span class=\"fn\">inferInstance</span> <span class=\"fn\">fun <span class=\"fn\">a</span> <span class=\"fn\">ω</span> =&gt <span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><span class=\"fn\">X</span> <span class=\"fn\">ω</span></span></span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(map : <span class=\"fn\">∀ (<span class=\"fn\">a</span> : <span class=\"fn\">α</span>), <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/MeasureSpace.html#MeasureTheory.Measure.map\">MeasureTheory.Measure.map</a> (<span class=\"fn\">fun <span class=\"fn\">ω</span> =&gt <span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><span class=\"fn\">X</span> <span class=\"fn\">ω</span></span></span></span>) <span class=\"fn\">μ</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Probability/ProbabilityMassFunction/Basic.html#Pmf.toMeasure\">Pmf.toMeasure</a> (<span class=\"fn\"><a href=\"./LeanCamCombi/Mathlib/Pmf.html#Pmf.bernoulli'\">Pmf.bernoulli'</a> <span class=\"fn\">p</span> <span class=\"fn\">le_one</span></span>)</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./LeanCamCombi/BernoulliSeq.html#ProbabilityTheory.IsBernoulliSeq\">ProbabilityTheory.IsBernoulliSeq</a> <span class=\"fn\">X</span> <span class=\"fn\">p</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/YaelDillies/LeanCamCombi/blob/41ed909d6e8b5e6b618db6412ed63ba09eba61c3//LeanCamCombi/BernoulliSeq.lean#L34-L38","name":"ProbabilityTheory.IsBernoulliSeq","line":34,"kind":"structure","docLink":"./LeanCamCombi/BernoulliSeq.html#ProbabilityTheory.IsBernoulliSeq","doc":"We say a `set α`-valued random is a sequence of iid Bernoulli random variables with parameter\n`p` if `p ≤ 1`, the `a` projections (for `a : α`) are independent and are `p`-Bernoulli distributed.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./LeanCamCombi/BernoulliSeq.html#ProbabilityTheory.IsBernoulliSeq\"><span class=\"name\">ProbabilityTheory</span>.<span class=\"name\">IsBernoulliSeq</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Ω : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSpace\">MeasurableSpace</a> <span class=\"fn\">Ω</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(X : <span class=\"fn\"><span class=\"fn\">Ω</span> → <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(p : <span class=\"fn\"><a href=\"./Init/Prelude.html#outParam\">outParam</a> <a href=\"./Mathlib/Data/Real/NNReal.html#NNReal\">NNReal</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(μ : <span class=\"fn\"><a href=\"./Init/Meta.html#autoParam\">autoParam</a> (<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/MeasureSpaceDef.html#MeasureTheory.Measure\">MeasureTheory.Measure</a> <span class=\"fn\">Ω</span></span>) <a href=\"./LeanCamCombi/BernoulliSeq.html#_auto._@.LeanCamCombi.BernoulliSeq._hyg.29\">_auto✝</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Prop</a></div></div>"}]}